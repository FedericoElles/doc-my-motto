[
    {
        "name": "angularDefer",
        "children": [
            {
                "name": "angularDeferFactory",
                "type": "factory",
                "level": 0,
                "line": 7,
                "params": [
                    {
                        "name": "$timeout"
                    }
                ],
                "publicName": "angularDefer",
                "comments": [
                    "@desc ",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "Deferred",
                            "type": "class",
                            "parentObject": "angularDefer",
                            "public": true,
                            "line": 15,
                            "params": [
                                {
                                    "name": "delay",
                                    "type": "number",
                                    "desc": "milliseconds cooldown before cb is executed"
                                },
                                {
                                    "name": "cb",
                                    "type": "function",
                                    "desc": "callback to be executed"
                                }
                            ],
                            "api": {
                                "funcs": [
                                    {
                                        "name": "skip",
                                        "type": "function",
                                        "public": true,
                                        "line": 26,
                                        "params": [
                                            {
                                                "name": "amount",
                                                "type": "number",
                                                "desc": ""
                                            }
                                        ],
                                        "comments": [
                                            "Add possibility to skip the callback n-times",
                                            ""
                                        ]
                                    },
                                    {
                                        "name": "run",
                                        "type": "function",
                                        "public": true,
                                        "line": 32,
                                        "params": [],
                                        "comments": [
                                            "force executing of callback"
                                        ]
                                    }
                                ],
                                "vars": []
                            },
                            "comments": [
                                "Defer Statement to run functions with a delay",
                                "",
                                ""
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "angularUam",
        "children": [
            {
                "name": "uamFactory",
                "type": "factory",
                "level": 0,
                "line": 10,
                "params": [
                    {
                        "name": "$http"
                    }
                ],
                "publicName": "uam",
                "comments": [
                    "@desc User Activity Monitoring",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "Event",
                            "type": "class",
                            "level": -1,
                            "line": 35,
                            "params": [
                                {
                                    "name": "props"
                                }
                            ],
                            "api": {
                                "funcs": [],
                                "vars": []
                            },
                            "comments": [
                                "class for Event object"
                            ]
                        },
                        {
                            "name": "submitEvents",
                            "type": "function",
                            "level": -1,
                            "line": 57,
                            "params": [
                                {
                                    "name": "force"
                                }
                            ],
                            "comments": [
                                "@desc Submits events if the time is right"
                            ]
                        },
                        {
                            "name": "planNextCheck",
                            "type": "function",
                            "level": -1,
                            "line": 99,
                            "params": [],
                            "comments": [
                                "@desc submit timeout for next event submission"
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "init",
                            "type": "function",
                            "parentObject": "uam",
                            "public": true,
                            "line": 123,
                            "params": [
                                {
                                    "name": "userConfig"
                                }
                            ],
                            "comments": [
                                "@desc updates default options - put into app.run block"
                            ]
                        },
                        {
                            "name": "addEvent",
                            "type": "function",
                            "parentObject": "uam",
                            "public": true,
                            "line": 137,
                            "params": [
                                {
                                    "name": "action"
                                },
                                {
                                    "name": "elementID"
                                },
                                {
                                    "name": "newval"
                                },
                                {
                                    "name": "oldval"
                                },
                                {
                                    "name": "documentID"
                                }
                            ],
                            "comments": [
                                "@desc creates a new event record"
                            ]
                        },
                        {
                            "name": "forceSubmit",
                            "type": "function",
                            "parentObject": "uam",
                            "public": true,
                            "line": 162,
                            "params": [],
                            "comments": []
                        },
                        {
                            "name": "getBrowser",
                            "type": "function",
                            "parentObject": "uam",
                            "public": true,
                            "line": 172,
                            "params": [],
                            "comments": [
                                "@desc via http://stackoverflow.com/questions/5916900/detect-version-of-browser",
                                "@returns name and version of browser"
                            ]
                        }
                    ],
                    "vars": []
                }
            },
            {
                "name": "uamWindowDirective",
                "type": "directive",
                "level": 0,
                "line": 208,
                "params": [
                    {
                        "name": "uam"
                    },
                    {
                        "name": "$window"
                    }
                ],
                "publicName": "uamWindow",
                "comments": [
                    "@desc Catches window events if added as attribute to HTML tag",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "uamClickDirective",
                "type": "directive",
                "level": 0,
                "line": 265,
                "params": [
                    {
                        "name": "$parse"
                    },
                    {
                        "name": "uam"
                    }
                ],
                "publicName": "uamClick",
                "comments": [
                    "@desc Catches click events on element",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "uamFocusDirective",
                "type": "directive",
                "level": 0,
                "line": 320,
                "params": [
                    {
                        "name": "uam"
                    }
                ],
                "publicName": "uamFocus",
                "comments": [
                    "@desc Catches focus event on an HTML element",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "uamMainAreaDirective",
                "type": "directive",
                "level": 0,
                "line": 350,
                "params": [],
                "publicName": "uamMainArea",
                "comments": [
                    "@desc Defines an UAM main area description, reused by area directive ",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "getArea",
                            "type": "function",
                            "public": true,
                            "line": 354,
                            "params": []
                        }
                    ],
                    "vars": []
                }
            },
            {
                "name": "uamAreaDirective",
                "type": "directive",
                "level": 0,
                "line": 369,
                "params": [],
                "publicName": "uamArea",
                "comments": [
                    "@desc Defines an UAM area description, reused by sub uam directives ",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "getArea",
                            "type": "function",
                            "public": true,
                            "line": 374,
                            "params": []
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "angularJSNLog",
        "children": [
            {
                "name": "logService",
                "type": "service",
                "level": 0,
                "line": 17,
                "params": [],
                "publicName": "$log",
                "comments": [
                    "@desc Replace $log service to be able to write to server",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "log",
                            "type": "function",
                            "public": true,
                            "line": 32,
                            "params": [
                                {
                                    "name": "msg"
                                }
                            ]
                        },
                        {
                            "name": "debug",
                            "type": "function",
                            "public": true,
                            "line": 36,
                            "params": [
                                {
                                    "name": "msg"
                                }
                            ]
                        },
                        {
                            "name": "info",
                            "type": "function",
                            "public": true,
                            "line": 40,
                            "params": [
                                {
                                    "name": "msg"
                                }
                            ]
                        },
                        {
                            "name": "warn",
                            "type": "function",
                            "public": true,
                            "line": 44,
                            "params": [
                                {
                                    "name": "msg"
                                }
                            ]
                        },
                        {
                            "name": "error",
                            "type": "function",
                            "public": true,
                            "line": 48,
                            "params": [
                                {
                                    "name": "msg"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            },
            {
                "name": "JSNLogFactory",
                "type": "factory",
                "level": 0,
                "line": 63,
                "params": [],
                "api": {
                    "funcs": [],
                    "vars": []
                },
                "publicName": "JSNLog",
                "comments": [
                    "@desc Return a JL Object",
                    "Example:",
                    "var c = new JSNLog('appRun', {level: 'info'});",
                    "c.info('starting...');",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "exceptionHandlerFactory",
                "type": "factory",
                "level": 0,
                "line": 93,
                "params": [],
                "publicName": "$exceptionHandler",
                "comments": [
                    "@desc Replace default Angular Exception Handler",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "logToServerInterceptorFactory",
                "type": "factory",
                "level": 0,
                "line": 106,
                "params": [
                    {
                        "name": "$q"
                    }
                ],
                "publicName": "logToServerInterceptor",
                "comments": [
                    "@desc Replace default Angular Exception Handler",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "directiveLib",
        "children": [
            {
                "name": "focusMeDirective",
                "type": "directive",
                "level": 0,
                "line": 9,
                "params": [],
                "publicName": "focusMe",
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "ngEnterDirective",
                "type": "directive",
                "level": 0,
                "line": 24,
                "params": [
                    {
                        "name": "$parse"
                    }
                ],
                "publicName": "ngEnter",
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "ngFocusDirective",
                "type": "directive",
                "level": 0,
                "line": 42,
                "params": [
                    {
                        "name": "$parse"
                    },
                    {
                        "name": "$timeout"
                    }
                ],
                "publicName": "ngFocus",
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "ngBlurDirective",
                "type": "directive",
                "level": 0,
                "line": 57,
                "params": [
                    {
                        "name": "$parse"
                    }
                ],
                "publicName": "ngBlur",
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "hourFilter",
                "type": "filter",
                "level": 0,
                "line": 77,
                "params": [],
                "publicName": "hour",
                "comments": [
                    "Filter Directive for displaying Hours",
                    "Transforms seconds into hours and minues \"66\" -> \"01:06\""
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "numberFloatDirective",
                "type": "directive",
                "level": 0,
                "line": 98,
                "params": [],
                "publicName": "numberFloat",
                "comments": [
                    "Adds decimal number to <input type=number>",
                    "If you use the up and down buttons,",
                    "the values will change by 0.1 instead of 1"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "trimFilter",
                "type": "filter",
                "level": 0,
                "line": 127,
                "params": [],
                "publicName": "trim",
                "comments": [
                    "trim"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "scrollGlueDirective",
                "type": "directive",
                "level": 0,
                "line": 147,
                "params": [],
                "publicName": "scrollGlue",
                "internal": {
                    "funcs": [
                        {
                            "name": "scrollToBottom",
                            "type": "function",
                            "level": -1,
                            "line": 166,
                            "params": []
                        },
                        {
                            "name": "shouldActivateAutoScroll",
                            "type": "function",
                            "level": -1,
                            "line": 170,
                            "params": []
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "infiniteScrollDivDirective",
                "type": "directive",
                "level": 0,
                "line": 196,
                "params": [
                    {
                        "name": "$rootScope"
                    },
                    {
                        "name": "$timeout"
                    }
                ],
                "publicName": "infiniteScrollDiv",
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "fromNowFilter",
                "type": "filter",
                "level": 0,
                "line": 262,
                "params": [],
                "publicName": "fromNow",
                "comments": [
                    "MomentJS usage",
                    "{{ reply.createdDate | fromNow }}",
                    "http://www.34m0.com/2012/07/angularjs-user-friendly-date-display.html"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "timeAgoDirective",
                "type": "directive",
                "level": 0,
                "line": 278,
                "params": [
                    {
                        "name": "timeAgoTick"
                    },
                    {
                        "name": "$rootScope"
                    }
                ],
                "publicName": "timeAgo",
                "comments": [
                    "http://stackoverflow.com/questions/18006334"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "timeAgoTickFactory",
                "type": "factory",
                "level": 0,
                "line": 299,
                "params": [
                    {
                        "name": "$rootScope"
                    }
                ],
                "publicName": "timeAgoTick",
                "internal": {
                    "funcs": [
                        {
                            "name": "broadcastTick",
                            "type": "function",
                            "level": -1,
                            "line": 303,
                            "params": []
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "onTimeAgo",
                            "type": "function",
                            "parentObject": "timeAgoTick",
                            "public": true,
                            "line": 316,
                            "params": [
                                {
                                    "name": "$scope"
                                },
                                {
                                    "name": "handler"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            },
            {
                "name": "scrollIfDirective",
                "type": "directive",
                "level": 0,
                "line": 327,
                "params": [],
                "publicName": "scrollIf",
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "favService",
        "children": [
            {
                "name": "favServiceFactory",
                "type": "factory",
                "level": 0,
                "line": 8,
                "params": [
                    {
                        "name": "CallbackService"
                    }
                ],
                "publicName": "favService",
                "comments": [
                    "@desc favorite mangager - supports different types",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "createHash",
                            "type": "function",
                            "level": -1,
                            "line": 58,
                            "params": [
                                {
                                    "name": "s"
                                }
                            ],
                            "comments": [
                                "@desc simple and fast hashing of a string",
                                "@params {string} s input string",
                                "@returns {string} hash string"
                            ]
                        },
                        {
                            "name": "createDic",
                            "type": "function",
                            "level": -1,
                            "line": 73,
                            "params": [
                                {
                                    "name": "a"
                                },
                                {
                                    "name": "key"
                                }
                            ],
                            "comments": [
                                "@desc converts an array of objects into a dict with the dict id",
                                "being the object property 'key'",
                                "@param {Array} a",
                                "@param {string} key",
                                "@returns {Object} "
                            ]
                        },
                        {
                            "name": "loadFav",
                            "type": "function",
                            "level": -1,
                            "line": 88,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "fav"
                                }
                            ],
                            "comments": [
                                "@desc loads a favorite and tiggers the related callback",
                                "@param {string} type type of favorite",
                                "@param {Object} fav Favorite object"
                            ]
                        },
                        {
                            "name": "updateFavId",
                            "type": "function",
                            "level": -1,
                            "line": 110,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "fav"
                                }
                            ],
                            "comments": [
                                "@desc update the name of favorite",
                                "@param {string} type",
                                "@param {Object} fav"
                            ]
                        },
                        {
                            "name": "toggleEdit",
                            "type": "function",
                            "level": -1,
                            "line": 123,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "fav"
                                }
                            ],
                            "comments": [
                                "@desc puts item in edit mode",
                                "@param {string} type",
                                "@param {Object} fav"
                            ]
                        },
                        {
                            "name": "moveFav",
                            "type": "function",
                            "level": -1,
                            "line": 139,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "fav"
                                }
                            ],
                            "comments": [
                                "@desc moves fav from temp to permantent container",
                                "@param {string} type",
                                "@param {Object} fav"
                            ]
                        },
                        {
                            "name": "getAll",
                            "type": "function",
                            "level": -1,
                            "line": 150,
                            "params": [
                                {
                                    "name": "type"
                                }
                            ],
                            "comments": [
                                "@desc returns favs and auto records"
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "typeahead",
                            "type": "function",
                            "public": true,
                            "line": 24,
                            "params": [],
                            "comments": [
                                "edited fav"
                            ]
                        },
                        {
                            "name": "load",
                            "type": "function",
                            "public": true,
                            "line": 27,
                            "params": [
                                {
                                    "name": "fav"
                                }
                            ]
                        },
                        {
                            "name": "updateFavId",
                            "type": "function",
                            "public": true,
                            "line": 30,
                            "params": [
                                {
                                    "name": "fav"
                                }
                            ]
                        },
                        {
                            "name": "toggleEdit",
                            "type": "function",
                            "public": true,
                            "line": 33,
                            "params": [
                                {
                                    "name": "fav"
                                }
                            ]
                        },
                        {
                            "name": "moveFav",
                            "type": "function",
                            "public": true,
                            "line": 36,
                            "params": [
                                {
                                    "name": "fav"
                                }
                            ]
                        },
                        {
                            "name": "registerType",
                            "type": "function",
                            "parentObject": "favService",
                            "public": true,
                            "line": 179,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "favStorage"
                                },
                                {
                                    "name": "autoStorage"
                                }
                            ],
                            "comments": [
                                "@desc creates new GUI ctrls for a fav type",
                                "@params {string} type",
                                "@params {Object} favStorage",
                                "@params {Object} autoStorage"
                            ]
                        },
                        {
                            "name": "getAll",
                            "type": "function",
                            "parentObject": "favService",
                            "public": true,
                            "line": 191,
                            "params": [
                                {
                                    "name": "type"
                                }
                            ],
                            "comments": [
                                "@desc return all favs of one type",
                                "@param {string} type "
                            ]
                        },
                        {
                            "name": "resetActive",
                            "type": "function",
                            "parentObject": "favService",
                            "public": true,
                            "line": 200,
                            "params": [
                                {
                                    "name": "type"
                                }
                            ],
                            "comments": [
                                "@desc resets current active search highlight"
                            ]
                        },
                        {
                            "name": "createAutoFav",
                            "type": "function",
                            "parentObject": "favService",
                            "public": true,
                            "line": 211,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "search"
                                },
                                {
                                    "name": "searchName"
                                }
                            ],
                            "comments": [
                                "@desc creates a new auto fav for customer type"
                            ]
                        }
                    ],
                    "vars": []
                }
            },
            {
                "name": "favUniSearchDirective",
                "type": "directive",
                "level": 0,
                "line": 272,
                "params": [
                    {
                        "name": "favService"
                    }
                ],
                "publicName": "favUniSearch",
                "comments": [
                    "@desc HTML searchbox covering all favs of a type",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "favListDirective",
                "type": "directive",
                "level": 0,
                "line": 291,
                "params": [
                    {
                        "name": "favService"
                    }
                ],
                "publicName": "favList",
                "comments": [
                    "@desc HTML List of all available favorites",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "favAutoListDirective",
                "type": "directive",
                "level": 0,
                "line": 313,
                "params": [
                    {
                        "name": "favService"
                    }
                ],
                "publicName": "favAutoList",
                "comments": [
                    "@desc HTML list of all available last searches",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "geoServiceConverter",
        "children": [
            {
                "name": "geoServiceConverterFactory",
                "type": "factory",
                "level": 0,
                "line": 8,
                "params": [],
                "publicName": "geoServiceConverter",
                "comments": [
                    "@desc Provides conversation of ISO codes",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "reverse",
                            "type": "function",
                            "level": -1,
                            "line": 345,
                            "params": [
                                {
                                    "name": "map"
                                }
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "carToIso2",
                            "type": "function",
                            "parentObject": "geoServiceConverter",
                            "public": true,
                            "line": 356,
                            "params": [
                                {
                                    "name": "code"
                                }
                            ]
                        },
                        {
                            "name": "iso2ToCar",
                            "type": "function",
                            "parentObject": "geoServiceConverter",
                            "public": true,
                            "line": 364,
                            "params": [
                                {
                                    "name": "code"
                                }
                            ]
                        },
                        {
                            "name": "iso3ToIso2",
                            "type": "function",
                            "parentObject": "geoServiceConverter",
                            "public": true,
                            "line": 372,
                            "params": [
                                {
                                    "name": "code"
                                }
                            ]
                        },
                        {
                            "name": "iso2ToIso3",
                            "type": "function",
                            "parentObject": "geoServiceConverter",
                            "public": true,
                            "line": 380,
                            "params": [
                                {
                                    "name": "code"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "geoServiceHere",
        "children": [
            {
                "name": "geoServiceHereFactory",
                "type": "factory",
                "level": 0,
                "line": 9,
                "params": [
                    {
                        "name": "$http"
                    },
                    {
                        "name": "$q"
                    },
                    {
                        "name": "geoServiceConverter"
                    },
                    {
                        "name": "tcMap"
                    },
                    {
                        "name": "geoServiceHereCountries"
                    }
                ],
                "publicName": "geoServiceHere",
                "comments": [
                    "@desc Core service to support geo based services",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "getMandatoryHereOptions",
                            "type": "function",
                            "level": -1,
                            "line": 24,
                            "params": []
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "geocode",
                            "type": "function",
                            "parentObject": "geoServiceHere",
                            "public": true,
                            "line": 223,
                            "params": [
                                {
                                    "name": "address"
                                },
                                {
                                    "name": "shapeType"
                                }
                            ],
                            "comments": [
                                "public functions"
                            ]
                        },
                        {
                            "name": "reverseGeocode",
                            "type": "function",
                            "parentObject": "geoServiceHere",
                            "public": true,
                            "line": 227,
                            "params": [
                                {
                                    "name": "Point"
                                },
                                {
                                    "name": "onlyAreaInfo"
                                }
                            ]
                        },
                        {
                            "name": "route",
                            "type": "function",
                            "parentObject": "geoServiceHere",
                            "public": true,
                            "line": 231,
                            "params": [
                                {
                                    "name": "waypoints"
                                },
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "transportMode"
                                },
                                {
                                    "name": "trafficEnabled"
                                }
                            ]
                        },
                        {
                            "name": "convert",
                            "type": "function",
                            "parentObject": "geoServiceHere",
                            "public": true,
                            "line": 235,
                            "params": [
                                {
                                    "name": "data"
                                },
                                {
                                    "name": "converter"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            },
            {
                "name": "isofyFilter",
                "type": "filter",
                "level": 0,
                "line": 251,
                "params": [
                    {
                        "name": "geoServiceConverter"
                    }
                ],
                "publicName": "isofy",
                "comments": [
                    "Turn car country ids into iso ids",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "geoServiceHereCountries",
        "children": [
            {
                "name": "geoServiceHereCountriesFactory",
                "type": "factory",
                "level": 0,
                "line": 8,
                "params": [
                    {
                        "name": "$http"
                    }
                ],
                "publicName": "geoServiceHereCountries",
                "comments": [
                    "@desc Singe Initial Run once App loaded",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "gMapService",
        "children": [
            {
                "name": "gMapServiceFactory",
                "type": "factory",
                "level": 0,
                "line": 10,
                "params": [],
                "publicName": "gMapService",
                "comments": [
                    "@desc Google Maps Helper Service",
                    "@temporary: Routeboxer to be replaced by server-side code",
                    "http://code42day.github.io/plumper/",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "RouteBoxer",
                            "type": "class",
                            "level": -1,
                            "line": 52,
                            "params": [],
                            "api": {
                                "funcs": [
                                    {
                                        "name": "box",
                                        "type": "function",
                                        "public": true,
                                        "line": 68,
                                        "params": [
                                            {
                                                "name": "path"
                                            },
                                            {
                                                "name": "range"
                                            }
                                        ],
                                        "comments": [
                                            "Generates boxes for a given route and distance",
                                            "@param {google.maps.LatLng[] | google.maps.Polyline} path The path along",
                                            "which to create boxes. The path object can be either an Array of",
                                            "google.maps.LatLng objects or a Maps API v2 or Maps API v3",
                                            "google.maps.Polyline object.",
                                            "@param {Number} range The distance in kms around the route that the generated",
                                            "boxes must cover.",
                                            "@return {google.maps.LatLngBounds[]} An array of boxes that covers the whole",
                                            "path."
                                        ]
                                    },
                                    {
                                        "name": "buildGrid_",
                                        "type": "function",
                                        "public": true,
                                        "line": 131,
                                        "params": [
                                            {
                                                "name": "vertices"
                                            },
                                            {
                                                "name": "range"
                                            }
                                        ],
                                        "comments": [
                                            "Generates boxes for a given route and distance",
                                            "@param {LatLng[]} vertices The vertices of the path over which to lay the grid",
                                            "@param {Number} range The spacing of the grid cells."
                                        ]
                                    },
                                    {
                                        "name": "findIntersectingCells_",
                                        "type": "function",
                                        "public": true,
                                        "line": 188,
                                        "params": [
                                            {
                                                "name": "vertices"
                                            }
                                        ],
                                        "comments": [
                                            "Find all of the cells in the overlaid grid that the path intersects",
                                            "@param {LatLng[]} vertices The vertices of the path"
                                        ]
                                    },
                                    {
                                        "name": "getCellCoords_",
                                        "type": "function",
                                        "public": true,
                                        "line": 233,
                                        "params": [
                                            {
                                                "name": "latlng"
                                            }
                                        ],
                                        "comments": [
                                            "Find the cell a path vertex is in by brute force iteration over the grid",
                                            "@param {LatLng[]} latlng The latlng of the vertex",
                                            "@return {Number[][]} The cell coordinates of this vertex in the grid"
                                        ]
                                    },
                                    {
                                        "name": "getGridCoordsFromHint_",
                                        "type": "function",
                                        "public": true,
                                        "line": 249,
                                        "params": [
                                            {
                                                "name": "latlng"
                                            },
                                            {
                                                "name": "hintlatlng"
                                            },
                                            {
                                                "name": "hint"
                                            }
                                        ],
                                        "comments": [
                                            "Find the cell a path vertex is in based on the known location of a nearby",
                                            "vertex. This saves searching the whole grid when working through vertices",
                                            "on the polyline that are likely to be in close proximity to each other.",
                                            "@param {LatLng[]} latlng The latlng of the vertex to locate in the grid",
                                            "@param {LatLng[]} hintlatlng The latlng of the vertex with a known location",
                                            "@param {Number[]} hint The cell containing the vertex with a known location",
                                            "@return {Number[]} The cell coordinates of the vertex to locate in the grid"
                                        ]
                                    },
                                    {
                                        "name": "getGridIntersects_",
                                        "type": "function",
                                        "public": true,
                                        "line": 286,
                                        "params": [
                                            {
                                                "name": "start"
                                            },
                                            {
                                                "name": "end"
                                            },
                                            {
                                                "name": "startXY"
                                            },
                                            {
                                                "name": "endXY"
                                            }
                                        ],
                                        "comments": [
                                            "Identify the grid squares that a path segment between two vertices",
                                            "intersects with by:",
                                            "1. Finding the bearing between the start and end of the segment",
                                            "2. Using the delta between the lat of the start and the lat of each",
                                            "latGrid boundary to find the distance to each latGrid boundary",
                                            "3. Finding the lng of the intersection of the line with each latGrid",
                                            "boundary using the distance to the intersection and bearing of the line",
                                            "4. Determining the x-coord on the grid of the point of intersection",
                                            "5. Filling in all squares between the x-coord of the previous intersection",
                                            "(or start) and the current one (or end) at the current y coordinate,",
                                            "which is known for the grid line being intersected",
                                            "@param {LatLng} start The latlng of the vertex at the start of the segment",
                                            "@param {LatLng} end The latlng of the vertex at the end of the segment",
                                            "@param {Number[]} startXY The cell containing the start vertex",
                                            "@param {Number[]} endXY The cell containing the vend vertex"
                                        ]
                                    },
                                    {
                                        "name": "getGridIntersect_",
                                        "type": "function",
                                        "public": true,
                                        "line": 356,
                                        "params": [
                                            {
                                                "name": "start"
                                            },
                                            {
                                                "name": "brng"
                                            },
                                            {
                                                "name": "gridLineLat"
                                            }
                                        ],
                                        "comments": [
                                            "Find the latlng at which a path segment intersects with a given",
                                            "line of latitude",
                                            "@param {LatLng} start The vertex at the start of the path segment",
                                            "@param {Number} brng The bearing of the line from start to end",
                                            "@param {Number} gridLineLat The latitude of the grid line being intersected",
                                            "@return {LatLng} The latlng of the point where the path segment intersects",
                                            "the grid line"
                                        ]
                                    },
                                    {
                                        "name": "fillInGridSquares_",
                                        "type": "function",
                                        "public": true,
                                        "line": 371,
                                        "params": [
                                            {
                                                "name": "startx"
                                            },
                                            {
                                                "name": "endx"
                                            },
                                            {
                                                "name": "y"
                                            }
                                        ],
                                        "comments": [
                                            "Mark all cells in a given row of the grid that lie between two columns",
                                            "for inclusion in the boxes",
                                            "@param {Number} startx The first column to include",
                                            "@param {Number} endx The last column to include",
                                            "@param {Number} y The row of the cells to include"
                                        ]
                                    },
                                    {
                                        "name": "markCell_",
                                        "type": "function",
                                        "public": true,
                                        "line": 389,
                                        "params": [
                                            {
                                                "name": "cell"
                                            }
                                        ],
                                        "comments": [
                                            "Mark a cell and the 8 immediate neighbours for inclusion in the boxes",
                                            "@param {Number[]} square The cell to mark"
                                        ]
                                    },
                                    {
                                        "name": "mergeIntersectingCells_",
                                        "type": "function",
                                        "public": true,
                                        "line": 416,
                                        "params": [],
                                        "comments": [
                                            "Create two sets of bounding boxes, both of which cover all of the cells that",
                                            "have been marked for inclusion.",
                                            "The first set is created by combining adjacent cells in the same column into",
                                            "a set of vertical rectangular boxes, and then combining boxes of the same",
                                            "height that are adjacent horizontally.",
                                            "The second set is created by combining adjacent cells in the same row into",
                                            "a set of horizontal rectangular boxes, and then combining boxes of the same",
                                            "width that are adjacent vertically."
                                        ]
                                    },
                                    {
                                        "name": "mergeBoxesX_",
                                        "type": "function",
                                        "public": true,
                                        "line": 489,
                                        "params": [
                                            {
                                                "name": "box"
                                            }
                                        ],
                                        "comments": [
                                            "Search for an existing box in an adjacent row to the given box that spans the",
                                            "same set of columns and if one is found merge the given box into it. If one",
                                            "is not found, append this box to the list of existing boxes.",
                                            "@param {LatLngBounds}  The box to merge"
                                        ]
                                    },
                                    {
                                        "name": "mergeBoxesY_",
                                        "type": "function",
                                        "public": true,
                                        "line": 511,
                                        "params": [
                                            {
                                                "name": "box"
                                            }
                                        ],
                                        "comments": [
                                            "Search for an existing box in an adjacent column to the given box that spans",
                                            "the same set of rows and if one is found merge the given box into it. If one",
                                            "is not found, append this box to the list of existing boxes.",
                                            "@param {LatLngBounds}  The box to merge"
                                        ]
                                    },
                                    {
                                        "name": "getCellBounds_",
                                        "type": "function",
                                        "public": true,
                                        "line": 532,
                                        "params": [
                                            {
                                                "name": "cell"
                                            }
                                        ],
                                        "comments": [
                                            "Obtain the LatLng of the origin of a cell on the grid",
                                            "@param {Number[]} cell The cell to lookup.",
                                            "@return {LatLng} The latlng of the origin of the cell."
                                        ]
                                    },
                                    {
                                        "name": "rhumbDestinationPoint",
                                        "type": "function",
                                        "public": true,
                                        "line": 543,
                                        "params": [
                                            {
                                                "name": "brng"
                                            },
                                            {
                                                "name": "dist"
                                            }
                                        ],
                                        "comments": [
                                            "Based on the Latitude/longitude spherical geodesy formulae & scripts",
                                            "at http://www.movable-type.co.uk/scripts/latlong.html",
                                            "(c) Chris Veness 2002-2010"
                                        ]
                                    },
                                    {
                                        "name": "rhumbBearingTo",
                                        "type": "function",
                                        "public": true,
                                        "line": 568,
                                        "params": [
                                            {
                                                "name": "dest"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "toRad",
                                        "type": "function",
                                        "public": true,
                                        "line": 584,
                                        "params": [],
                                        "comments": [
                                            "Extend the Number object to convert degrees to radians",
                                            "@return {Number} Bearing in radians",
                                            "@ignore"
                                        ]
                                    },
                                    {
                                        "name": "toDeg",
                                        "type": "function",
                                        "public": true,
                                        "line": 594,
                                        "params": [],
                                        "comments": [
                                            "Extend the Number object to convert radians to degrees",
                                            "@return {Number} Bearing in degrees",
                                            "@ignore"
                                        ]
                                    },
                                    {
                                        "name": "toBrng",
                                        "type": "function",
                                        "public": true,
                                        "line": 604,
                                        "params": [],
                                        "comments": [
                                            "Normalize a heading in degrees to between 0 and +360",
                                            "@return {Number} Return",
                                            "@ignore"
                                        ]
                                    }
                                ],
                                "vars": []
                            },
                            "comments": [
                                "Creates a new RouteBoxer",
                                "@constructor"
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "routeTotalDistanceDuration",
                            "type": "function",
                            "parentObject": "gMapService",
                            "public": true,
                            "line": 611,
                            "params": [
                                {
                                    "name": "directionsResult"
                                }
                            ],
                            "comments": []
                        },
                        {
                            "name": "geocodePoint",
                            "type": "function",
                            "parentObject": "gMapService",
                            "public": true,
                            "line": 630,
                            "params": [
                                {
                                    "name": "latLng"
                                },
                                {
                                    "name": "cb"
                                }
                            ],
                            "comments": [
                                "geoCoding request"
                            ]
                        },
                        {
                            "name": "geocodeAddress",
                            "type": "function",
                            "parentObject": "gMapService",
                            "public": true,
                            "line": 635,
                            "params": [
                                {
                                    "name": "address"
                                },
                                {
                                    "name": "cb"
                                }
                            ]
                        },
                        {
                            "name": "geocoder",
                            "type": "function",
                            "parentObject": "gMapService",
                            "public": true,
                            "line": 641,
                            "params": [
                                {
                                    "name": "options"
                                },
                                {
                                    "name": "cb"
                                }
                            ]
                        },
                        {
                            "name": "getRandomMarker",
                            "type": "function",
                            "parentObject": "gMapService",
                            "public": true,
                            "line": 669,
                            "params": [
                                {
                                    "name": "bounds"
                                }
                            ],
                            "comments": [
                                "random points"
                            ]
                        }
                    ],
                    "vars": []
                }
            },
            {
                "name": "googleplace2Directive",
                "type": "directive",
                "level": 0,
                "line": 693,
                "params": [
                    {
                        "name": "$parse"
                    },
                    {
                        "name": "$timeout"
                    }
                ],
                "publicName": "googleplace2",
                "comments": [
                    "@desc Inputbox Place Suggestions",
                    "@ngInject",
                    "@temporaory"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "ngSidebar",
        "children": [
            {
                "name": "sidebarManagerFactory",
                "type": "factory",
                "level": 0,
                "line": 17,
                "params": [],
                "publicName": "sidebarManager",
                "comments": [
                    "@desc Provides a service to externally manage sidebars"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "isFunction",
                            "type": "function",
                            "level": -1,
                            "line": 25,
                            "params": [
                                {
                                    "name": "functionToCheck"
                                }
                            ]
                        },
                        {
                            "name": "trigger",
                            "type": "function",
                            "level": -1,
                            "line": 31,
                            "params": [
                                {
                                    "name": "callback"
                                },
                                {
                                    "name": "id"
                                }
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "isOpen",
                            "type": "function",
                            "parentObject": "sidebarManager",
                            "public": true,
                            "line": 40,
                            "params": []
                        },
                        {
                            "name": "registerCard",
                            "type": "function",
                            "parentObject": "sidebarManager",
                            "public": true,
                            "line": 46,
                            "params": [
                                {
                                    "name": "cardOptions"
                                }
                            ]
                        },
                        {
                            "name": "hide",
                            "type": "function",
                            "parentObject": "cardOptions",
                            "public": true,
                            "line": 55,
                            "params": [],
                            "comments": [
                                "hide card"
                            ]
                        },
                        {
                            "name": "close",
                            "type": "function",
                            "parentObject": "cardOptions",
                            "public": true,
                            "line": 74,
                            "params": []
                        },
                        {
                            "name": "toBack",
                            "type": "function",
                            "parentObject": "cardOptions",
                            "public": true,
                            "line": 80,
                            "params": [],
                            "comments": [
                                "card moves to background, according to childCard request"
                            ]
                        },
                        {
                            "name": "activate",
                            "type": "function",
                            "parentObject": "cardOptions",
                            "public": true,
                            "line": 99,
                            "params": []
                        },
                        {
                            "name": "open",
                            "type": "function",
                            "parentObject": "sidebarManager",
                            "public": true,
                            "line": 112,
                            "params": [
                                {
                                    "name": "id"
                                }
                            ]
                        },
                        {
                            "name": "openChild",
                            "type": "function",
                            "parentObject": "sidebarManager",
                            "public": true,
                            "line": 127,
                            "params": [
                                {
                                    "name": "id"
                                },
                                {
                                    "name": "parentID"
                                }
                            ],
                            "comments": [
                                "If a parent exists, it is still visible in the background"
                            ]
                        },
                        {
                            "name": "close",
                            "type": "function",
                            "parentObject": "sidebarManager",
                            "public": true,
                            "line": 169,
                            "params": [
                                {
                                    "name": "id"
                                }
                            ],
                            "comments": [
                                "close card, front parent if available"
                            ]
                        },
                        {
                            "name": "toggle",
                            "type": "function",
                            "parentObject": "sidebarManager",
                            "public": true,
                            "line": 198,
                            "params": [
                                {
                                    "name": "id"
                                }
                            ]
                        },
                        {
                            "name": "card",
                            "type": "function",
                            "parentObject": "sidebarManager",
                            "public": true,
                            "line": 206,
                            "params": [
                                {
                                    "name": "id"
                                }
                            ]
                        },
                        {
                            "name": "isCardOpen",
                            "type": "function",
                            "parentObject": "sidebarManager",
                            "public": true,
                            "line": 214,
                            "params": [
                                {
                                    "name": "id"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            },
            {
                "name": "sidebarDirective",
                "type": "directive",
                "level": 0,
                "line": 230,
                "params": [],
                "publicName": "sidebar",
                "comments": [
                    "Encapsulates content in a sidebar container"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "onActivate",
                            "type": "function",
                            "parentObject": "$scope",
                            "public": true,
                            "line": 247,
                            "params": []
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tabHandler",
        "children": [
            {
                "name": "tabHandlerFactory",
                "type": "factory",
                "level": 0,
                "line": 7,
                "params": [],
                "publicName": "tabHandler",
                "comments": [
                    "tabHandler service - allows it to register callbacks which",
                    "are called in case the selected tab is changed"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "addDefault",
                            "type": "function",
                            "parentObject": "tabHandler",
                            "public": true,
                            "line": 31,
                            "params": [
                                {
                                    "name": "tabObject"
                                }
                            ]
                        },
                        {
                            "name": "register",
                            "type": "function",
                            "parentObject": "tabHandler",
                            "public": true,
                            "line": 37,
                            "params": [
                                {
                                    "name": "name"
                                },
                                {
                                    "name": "tabObject"
                                }
                            ]
                        },
                        {
                            "name": "get",
                            "type": "function",
                            "parentObject": "tabHandler",
                            "public": true,
                            "line": 44,
                            "params": [
                                {
                                    "name": "name"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcService",
        "children": [
            {
                "name": "tcFactory",
                "type": "factory",
                "level": 0,
                "line": 8,
                "params": [],
                "publicName": "tc",
                "comments": [
                    "@desc Provides all List of values"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            },
            {
                "name": "tcidFilter",
                "type": "filter",
                "level": 0,
                "line": 302,
                "params": [],
                "publicName": "tcid",
                "comments": [
                    "formats the tcid field into a viewable format",
                    "\"CUST-00010\" -> \"10\""
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "children": []
    },
    {
        "name": "tcCargo",
        "children": [
            {
                "name": "tcCargoFactory",
                "type": "factory",
                "level": 0,
                "line": 5,
                "params": [
                    {
                        "name": "watchService"
                    },
                    {
                        "name": "CallbackService"
                    },
                    {
                        "name": "timeKeeper"
                    },
                    {
                        "name": "geoServiceHere"
                    },
                    {
                        "name": "tcCargoMap"
                    },
                    {
                        "name": "uam"
                    }
                ],
                "publicName": "tcCargo",
                "comments": [
                    "@desc tcCargo Service",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "resetSearch",
                            "type": "function",
                            "level": -1,
                            "line": 224,
                            "params": [],
                            "comments": [
                                "@desc notify GUI of reset"
                            ]
                        },
                        {
                            "name": "rightClickHandler",
                            "type": "function",
                            "level": -1,
                            "line": 247,
                            "params": [
                                {
                                    "name": "Point"
                                }
                            ]
                        },
                        {
                            "name": "updateSearchFields",
                            "type": "function",
                            "level": -1,
                            "line": 321,
                            "params": [
                                {
                                    "name": "info"
                                }
                            ]
                        },
                        {
                            "name": "updatedSmallestRadius",
                            "type": "function",
                            "level": -1,
                            "line": 360,
                            "params": [],
                            "comments": [
                                "@desc Updates routeWidth according to radius bounderies",
                                "@returns {Boolean} true, if routeWidth needed update"
                            ]
                        },
                        {
                            "name": "updateCorridor",
                            "type": "function",
                            "level": -1,
                            "line": 380,
                            "params": [],
                            "comments": [
                                "@desc Redraws the route corridor"
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "level": -1,
                            "line": 406,
                            "params": [
                                {
                                    "name": "status"
                                },
                                {
                                    "name": "layer"
                                }
                            ],
                            "comments": [
                                "@desc turns visiblility of all or one layer on and off"
                            ]
                        },
                        {
                            "name": "clearDeleted",
                            "type": "function",
                            "level": -1,
                            "line": 418,
                            "params": [],
                            "comments": [
                                "@desc deleted records are removed from list"
                            ]
                        },
                        {
                            "name": "getCtrlCorridorActive",
                            "type": "function",
                            "level": -1,
                            "line": 437,
                            "params": [],
                            "comments": [
                                "corridor is turned on or off"
                            ]
                        },
                        {
                            "name": "onCtrlCorridorActiveChange",
                            "type": "function",
                            "level": -1,
                            "line": 441,
                            "params": [
                                {
                                    "name": "newval"
                                },
                                {
                                    "name": "oldval"
                                }
                            ]
                        },
                        {
                            "name": "getCtrlCorridorRadiusFrom",
                            "type": "function",
                            "level": -1,
                            "line": 453,
                            "params": [],
                            "comments": [
                                "start or end point radius is changed"
                            ]
                        },
                        {
                            "name": "getCtrlCorridorRadiusTo",
                            "type": "function",
                            "level": -1,
                            "line": 457,
                            "params": []
                        },
                        {
                            "name": "getCtrlCorridorRouteWidth",
                            "type": "function",
                            "level": -1,
                            "line": 466,
                            "params": [],
                            "comments": [
                                "corridor width is changed. Make sure width is < than either point radius"
                            ]
                        },
                        {
                            "name": "onCtrlCorridorRouteWidthChange",
                            "type": "function",
                            "level": -1,
                            "line": 470,
                            "params": []
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "rowdeleteCallback",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 577,
                            "params": [
                                {
                                    "name": "row"
                                }
                            ],
                            "comments": [
                                "@desc if a row has status deleted, remove the row from map if visible",
                                "@param {object} row"
                            ]
                        },
                        {
                            "name": "isValidQuery",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 592,
                            "params": [
                                {
                                    "name": "newval"
                                },
                                {
                                    "name": "oldval"
                                }
                            ],
                            "comments": [
                                "Validates searchFields if a query can be executed",
                                "- used by app.js"
                            ]
                        },
                        {
                            "name": "getSearch",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 621,
                            "params": [],
                            "comments": [
                                "@desc returns a search object to be saved in e.g. favorites",
                                "@returns {Object} representing a search"
                            ]
                        },
                        {
                            "name": "loadSearch",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 653,
                            "params": [
                                {
                                    "name": "searchObject"
                                }
                            ],
                            "comments": [
                                "@desc loads an external search into searchFields",
                                "@params {Object} searchObject contains data created by getSearch"
                            ]
                        },
                        {
                            "name": "getSearchName",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 684,
                            "params": [],
                            "comments": [
                                "@desc returns a string representing the current search",
                                "@returns {string}"
                            ]
                        },
                        {
                            "name": "leaveView",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 701,
                            "params": [],
                            "comments": [
                                "used by tabHandler"
                            ]
                        },
                        {
                            "name": "enterView",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 709,
                            "params": [
                                {
                                    "name": "viewInfo"
                                }
                            ],
                            "comments": [
                                "used by tabHandler"
                            ]
                        },
                        {
                            "name": "focus",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 717,
                            "params": [
                                {
                                    "name": "viewInfo"
                                }
                            ],
                            "comments": [
                                "used by tabHandler"
                            ]
                        },
                        {
                            "name": "resetSearch",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 726,
                            "params": [],
                            "comments": [
                                "@desc reset search"
                            ]
                        },
                        {
                            "name": "toggleVisibility",
                            "type": "function",
                            "parentObject": "ctrl",
                            "public": true,
                            "line": 734,
                            "params": [],
                            "comments": [
                                "@desc toggle visiblity - used by GUI buttons"
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 743,
                            "params": [
                                {
                                    "name": "status"
                                },
                                {
                                    "name": "layer"
                                }
                            ],
                            "comments": [
                                "@desc used by app.js the hide on reset"
                            ]
                        },
                        {
                            "name": "generatePopupHTML",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 755,
                            "params": [
                                {
                                    "name": "featureId"
                                },
                                {
                                    "name": "activeCargo"
                                },
                                {
                                    "name": "compactSize"
                                }
                            ],
                            "comments": [
                                "@desc generate PopUp HTML Code",
                                "TODO: function should be triggered by app.js",
                                "tcCargo.onLineClick=function(){",
                                "tcCargo.showPopup($scope.active.cargo)",
                                "}"
                            ]
                        },
                        {
                            "name": "getMapSearchBoxes",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 764,
                            "params": [],
                            "comments": [
                                "@desc generates route boxing",
                                "TODO: To be removed as public function"
                            ]
                        },
                        {
                            "name": "handlePoints",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 774,
                            "params": [],
                            "comments": [
                                "@desc Draw temp layer points on map-click"
                            ]
                        },
                        {
                            "name": "clearMap",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 832,
                            "params": [],
                            "comments": [
                                "@desc removes all lines from map"
                            ]
                        },
                        {
                            "name": "drawMap",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 841,
                            "params": [
                                {
                                    "name": "truckRows"
                                },
                                {
                                    "name": "lastAdded"
                                }
                            ],
                            "comments": [
                                "@desc redraws map based on rows"
                            ]
                        },
                        {
                            "name": "updateSearchFields",
                            "type": "function",
                            "parentObject": "tcCargo",
                            "public": true,
                            "line": 851,
                            "params": [
                                {
                                    "name": "info"
                                }
                            ],
                            "comments": [
                                "@desc temp",
                                "TODO: Delete once all functions migratation in here"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcCargoMap",
        "children": [
            {
                "name": "tcCargoMapFactory",
                "type": "factory",
                "level": 0,
                "line": 5,
                "params": [
                    {
                        "name": "tcMap"
                    },
                    {
                        "name": "gMapService"
                    }
                ],
                "publicName": "tcCargoMap",
                "comments": [
                    "@desc tcCargoMap Service",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "generatePopupHTML",
                            "type": "function",
                            "parentObject": "tcCargoMap",
                            "public": true,
                            "line": 133,
                            "params": [
                                {
                                    "name": "featureId"
                                },
                                {
                                    "name": "activeCargo"
                                },
                                {
                                    "name": "compactSize"
                                }
                            ],
                            "comments": [
                                "@desc Generated HTML code for the map popup",
                                "@params {string} featureId",
                                "@params {Object} cargo object containing information for popup",
                                "@params {Boolean} compactSize if true, small HTML is generated ",
                                "@returns {string} HTML Code to be used for popup"
                            ]
                        },
                        {
                            "name": "getSearchBoxes",
                            "type": "function",
                            "parentObject": "tcCargoMap",
                            "public": true,
                            "line": 219,
                            "params": [
                                {
                                    "name": "debug"
                                },
                                {
                                    "name": "routeWidth"
                                }
                            ],
                            "comments": [
                                "@desc returns array of bounding boxes for the currently active route"
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "function",
                            "parentObject": "tcCargoMap",
                            "public": true,
                            "line": 315,
                            "params": [],
                            "comments": [
                                "@desc removes all lines on map"
                            ]
                        },
                        {
                            "name": "draw",
                            "type": "function",
                            "parentObject": "tcCargoMap",
                            "public": true,
                            "line": 323,
                            "params": [
                                {
                                    "name": "cargoRows"
                                },
                                {
                                    "name": "maxRows"
                                },
                                {
                                    "name": "lastAdded"
                                }
                            ],
                            "comments": [
                                "@desc Draws Cargo Lines on Map"
                            ]
                        },
                        {
                            "name": "focus",
                            "type": "function",
                            "parentObject": "tcCargoMap",
                            "public": true,
                            "line": 378,
                            "params": [
                                {
                                    "name": "viewInfo"
                                },
                                {
                                    "name": "mapState"
                                }
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "parentObject": "tcCargoMap",
                            "public": true,
                            "line": 394,
                            "params": [
                                {
                                    "name": "status"
                                },
                                {
                                    "name": "layer"
                                }
                            ],
                            "comments": [
                                "@desc Changes the setVisibility status for all Layers",
                                "@param {Boolean} status show or hide layer",
                                "@param {Number} layer ID of layer to show or hide"
                            ]
                        },
                        {
                            "name": "addMarker",
                            "type": "function",
                            "parentObject": "tcCargoMap",
                            "public": true,
                            "line": 409,
                            "params": [
                                {
                                    "name": "Point"
                                },
                                {
                                    "name": "contentCode"
                                }
                            ],
                            "comments": [
                                "@desc Draws a marker on the marker layer",
                                "@param {GeoJson.Point} a Point",
                                "@param {string} marker content"
                            ]
                        },
                        {
                            "name": "removeMarker",
                            "type": "function",
                            "parentObject": "tcCargoMap",
                            "public": true,
                            "line": 417,
                            "params": [
                                {
                                    "name": "marker"
                                }
                            ],
                            "comments": [
                                "@desc Removes a marker from the tempLayer",
                                "@param {Marker} Marker Reference"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcCustomer",
        "children": [
            {
                "name": "tcCustomerFactory",
                "type": "factory",
                "level": 0,
                "line": 5,
                "params": [
                    {
                        "name": "watchService"
                    },
                    {
                        "name": "CallbackService"
                    },
                    {
                        "name": "angularDefer"
                    },
                    {
                        "name": "tcCustomerMap"
                    }
                ],
                "publicName": "tcCustomer",
                "comments": [
                    "@desc tcCustomer Service",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "resetSearch",
                            "type": "function",
                            "level": -1,
                            "line": 87,
                            "params": [],
                            "comments": []
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "level": -1,
                            "line": 94,
                            "params": [
                                {
                                    "name": "status"
                                }
                            ]
                        },
                        {
                            "name": "updateBoundingSearch",
                            "type": "function",
                            "level": -1,
                            "line": 106,
                            "params": [
                                {
                                    "name": "active"
                                },
                                {
                                    "name": "boxes"
                                }
                            ],
                            "comments": []
                        },
                        {
                            "name": "getCustomerCtrlUseMapSearch",
                            "type": "function",
                            "level": -1,
                            "line": 141,
                            "params": []
                        },
                        {
                            "name": "onCustomerCtrlUseMapSearchChange",
                            "type": "function",
                            "level": -1,
                            "line": 145,
                            "params": [
                                {
                                    "name": "newval"
                                }
                            ]
                        },
                        {
                            "name": "getCustomerSearchFieldFlagOwnTrucks",
                            "type": "function",
                            "level": -1,
                            "line": 153,
                            "params": []
                        },
                        {
                            "name": "onCustomerSearchFieldFlagOwnTrucksChange",
                            "type": "function",
                            "level": -1,
                            "line": 157,
                            "params": [
                                {
                                    "name": "newval"
                                },
                                {
                                    "name": "oldval"
                                }
                            ]
                        },
                        {
                            "name": "runCustomerDeferedBoundingSearch",
                            "type": "function",
                            "level": -1,
                            "line": 183,
                            "params": []
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "isValidQuery",
                            "type": "function",
                            "parentObject": "tcCustomer",
                            "public": true,
                            "line": 236,
                            "params": [
                                {
                                    "name": "newval"
                                },
                                {
                                    "name": "oldval"
                                }
                            ],
                            "comments": [
                                "Validates searchFields if a query can be executed",
                                "- used by app.js"
                            ]
                        },
                        {
                            "name": "enterView",
                            "type": "function",
                            "parentObject": "tcCustomer",
                            "public": true,
                            "line": 248,
                            "params": [
                                {
                                    "name": "viewInfo"
                                }
                            ]
                        },
                        {
                            "name": "leaveView",
                            "type": "function",
                            "parentObject": "tcCustomer",
                            "public": true,
                            "line": 257,
                            "params": []
                        },
                        {
                            "name": "focus",
                            "type": "function",
                            "parentObject": "tcCustomer",
                            "public": true,
                            "line": 265,
                            "params": []
                        },
                        {
                            "name": "toggleVisibility",
                            "type": "function",
                            "parentObject": "ctrl",
                            "public": true,
                            "line": 272,
                            "params": [],
                            "comments": [
                                "@desc toggle visiblity - used by GUI buttons"
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "parentObject": "tcCustomer",
                            "public": true,
                            "line": 281,
                            "params": [
                                {
                                    "name": "status"
                                }
                            ],
                            "comments": [
                                "@desc used by demo.js the hide on load"
                            ]
                        },
                        {
                            "name": "setBoundingSearch",
                            "type": "function",
                            "parentObject": "tcCustomer",
                            "public": true,
                            "line": 291,
                            "params": [
                                {
                                    "name": "boxes"
                                }
                            ],
                            "comments": [
                                "@desc Enables bound search for tcCustomer",
                                "TODO: not sure if currect here"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcCustomerMap",
        "children": [
            {
                "name": "tcCustomerMapFactory",
                "type": "factory",
                "level": 0,
                "line": 2,
                "params": [
                    {
                        "name": "tcMap"
                    }
                ],
                "publicName": "tcCustomerMap",
                "internal": {
                    "funcs": [
                        {
                            "name": "draw",
                            "type": "function",
                            "level": -1,
                            "line": 49,
                            "params": [
                                {
                                    "name": "customerRows"
                                }
                            ],
                            "comments": [
                                "@desc Draws the found customer on the map after removing",
                                "all old features.",
                                "@param {Array} customerRows"
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "draw",
                            "type": "function",
                            "parentObject": "tcCustomerMap",
                            "public": true,
                            "line": 69,
                            "params": [
                                {
                                    "name": "customerRows"
                                }
                            ],
                            "comments": [
                                "@desc draws customer rows on map"
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "function",
                            "parentObject": "tcCustomerMap",
                            "public": true,
                            "line": 78,
                            "params": [],
                            "comments": [
                                "@desc Clears all the Layers"
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "parentObject": "tcCustomerMap",
                            "public": true,
                            "line": 89,
                            "params": [
                                {
                                    "name": "status"
                                }
                            ],
                            "comments": [
                                "@desc Changes the setVisibility status for all Layers",
                                "@param {Boolean} setVisibility status"
                            ]
                        },
                        {
                            "name": "raiseLayers",
                            "type": "function",
                            "parentObject": "tcCustomerMap",
                            "public": true,
                            "line": 97,
                            "params": [],
                            "comments": [
                                "@desc move Map Layers to Top"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcDataUser",
        "children": [
            {
                "name": "tcDataUserFactory",
                "type": "factory",
                "level": 0,
                "line": 7,
                "params": [
                    {
                        "name": "$http"
                    },
                    {
                        "name": "$interval"
                    }
                ],
                "publicName": "tcDataUser",
                "comments": [
                    "Handles the current user. Right now without DB connection",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "destroy",
                            "type": "function",
                            "parentObject": "tcDataUser",
                            "public": true,
                            "line": 94,
                            "params": [],
                            "comments": [
                                "@desc Kills all internal $intervals"
                            ]
                        },
                        {
                            "name": "save",
                            "type": "function",
                            "parentObject": "tcDataUser",
                            "public": true,
                            "line": 99,
                            "params": []
                        },
                        {
                            "name": "getStorage",
                            "type": "function",
                            "parentObject": "tcDataUser",
                            "public": true,
                            "line": 123,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "options"
                                }
                            ],
                            "comments": [
                                "get a new storage service"
                            ]
                        },
                        {
                            "name": "_findIndex",
                            "type": "class",
                            "parentObject": "collection",
                            "public": true,
                            "line": 138,
                            "params": [
                                {
                                    "name": "id"
                                }
                            ],
                            "api": {
                                "funcs": [],
                                "vars": []
                            },
                            "comments": [
                                "helper to find row in array by index"
                            ]
                        },
                        {
                            "name": "_deletedOldest",
                            "type": "class",
                            "parentObject": "collection",
                            "public": true,
                            "line": 150,
                            "params": [],
                            "api": {
                                "funcs": [],
                                "vars": []
                            }
                        },
                        {
                            "name": "add",
                            "type": "function",
                            "parentObject": "collection",
                            "public": true,
                            "line": 173,
                            "params": [
                                {
                                    "name": "item"
                                }
                            ],
                            "comments": [
                                "Add new item. Add _id if missing"
                            ]
                        },
                        {
                            "name": "update",
                            "type": "function",
                            "parentObject": "collection",
                            "public": true,
                            "line": 190,
                            "params": [
                                {
                                    "name": "item"
                                }
                            ]
                        },
                        {
                            "name": "remove",
                            "type": "function",
                            "parentObject": "collection",
                            "public": true,
                            "line": 199,
                            "params": [
                                {
                                    "name": "item"
                                }
                            ]
                        },
                        {
                            "name": "isFlagged",
                            "type": "function",
                            "parentObject": "tcDataUser",
                            "public": true,
                            "line": 230,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "id"
                                }
                            ],
                            "comments": [
                                "FlAGGING SERVICE"
                            ]
                        },
                        {
                            "name": "toggleFlag",
                            "type": "function",
                            "parentObject": "tcDataUser",
                            "public": true,
                            "line": 242,
                            "params": [
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "id"
                                }
                            ]
                        },
                        {
                            "name": "clearFlags",
                            "type": "function",
                            "parentObject": "tcDataUser",
                            "public": true,
                            "line": 254,
                            "params": [
                                {
                                    "name": "type"
                                }
                            ]
                        },
                        {
                            "name": "usedFlag",
                            "type": "function",
                            "parentObject": "tcDataUser",
                            "public": true,
                            "line": 261,
                            "params": [
                                {
                                    "name": "type"
                                }
                            ]
                        },
                        {
                            "name": "selfTest",
                            "type": "function",
                            "parentObject": "tcDataUser",
                            "public": true,
                            "line": 270,
                            "params": []
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcMap",
        "children": [
            {
                "name": "tcMapFactory",
                "type": "factory",
                "level": 0,
                "line": 9,
                "params": [
                    {
                        "name": "$window"
                    },
                    {
                        "name": "$rootScope"
                    },
                    {
                        "name": "$timeout"
                    },
                    {
                        "name": "CallbackService"
                    },
                    {
                        "name": "tcMapStyle"
                    }
                ],
                "publicName": "tcMap",
                "comments": [
                    "@desc Map Service",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "addRoute",
                            "type": "function",
                            "level": -1,
                            "line": 225,
                            "params": [
                                {
                                    "name": "waypoints"
                                }
                            ]
                        },
                        {
                            "name": "ajustForOverlays",
                            "type": "function",
                            "level": -1,
                            "line": 341,
                            "params": [
                                {
                                    "name": "bbox"
                                },
                                {
                                    "name": "viewInfo"
                                }
                            ]
                        },
                        {
                            "name": "focusOnBbox",
                            "type": "function",
                            "level": -1,
                            "line": 375,
                            "params": [
                                {
                                    "name": "bbox"
                                },
                                {
                                    "name": "doHandleLeftMenu"
                                },
                                {
                                    "name": "viewInfo"
                                }
                            ],
                            "comments": [
                                "Calculates Zoom Level and Center of the Map in such a way,",
                                "that the provided Bounding Box can be seen entierely",
                                "The Aurora Header (with Table) and Left Menu are overing",
                                "the Map masking some part of the bbox, they can be taken",
                                "into account for the calculation.",
                                "@param bbox {Array} an array of coordinates [left, bottom, right, top]",
                                "@param doHandleLeftMenu {Boolean} triggers the compensation of Header & Menu"
                            ]
                        },
                        {
                            "name": "showBBox",
                            "type": "function",
                            "level": -1,
                            "line": 413,
                            "params": [
                                {
                                    "name": "bbox"
                                },
                                {
                                    "name": "color"
                                },
                                {
                                    "name": "clearLayer"
                                }
                            ],
                            "comments": [
                                "DEBUGGING INFORMATION",
                                "Draws the provided Bounding Box on the Map.",
                                "@param bbox {Array} an array of coordinates [left, bottom, right, top]",
                                "@param color {String} color string as #00ff00",
                                "@param clearLayer {Boolean} triggers the cleaning of the Layer before drawing"
                            ]
                        },
                        {
                            "name": "defaultFocus",
                            "type": "function",
                            "level": -1,
                            "line": 445,
                            "params": [
                                {
                                    "name": "doHandleLeftMenu"
                                },
                                {
                                    "name": "viewInfo"
                                }
                            ]
                        },
                        {
                            "name": "getClusterMaxCount",
                            "type": "function",
                            "level": -1,
                            "line": 588,
                            "params": [
                                {
                                    "name": "layer"
                                }
                            ],
                            "comments": [
                                "@desc ???",
                                "@param {Object} layer",
                                "@returns {Number}"
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "setPoiTypes",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 49,
                            "params": [
                                {
                                    "name": "types"
                                }
                            ]
                        },
                        {
                            "name": "init",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 53,
                            "params": [
                                {
                                    "name": "uiMap"
                                },
                                {
                                    "name": "options"
                                }
                            ]
                        },
                        {
                            "name": "visible",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 97,
                            "params": [
                                {
                                    "name": "shapeTypes"
                                }
                            ]
                        },
                        {
                            "name": "addLines",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 118,
                            "params": []
                        },
                        {
                            "name": "hideShapes",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 139,
                            "params": [
                                {
                                    "name": "shapeTypes"
                                }
                            ]
                        },
                        {
                            "name": "showShapes",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 160,
                            "params": [
                                {
                                    "name": "shapeTypes"
                                },
                                {
                                    "name": "hideOtherShapes"
                                }
                            ]
                        },
                        {
                            "name": "getViewport",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 187,
                            "params": []
                        },
                        {
                            "name": "getViewportSearchBox",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 197,
                            "params": [],
                            "comments": [
                                "@desc Return a {topLeft, bottomRight} object useable by searches"
                            ]
                        },
                        {
                            "name": "activeRouteExists",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 221,
                            "params": []
                        },
                        {
                            "name": "destroyRoute",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 251,
                            "params": []
                        },
                        {
                            "name": "activateFilter",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 262,
                            "params": [
                                {
                                    "name": "filter"
                                }
                            ],
                            "comments": []
                        },
                        {
                            "name": "getRandomLonLat",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 275,
                            "params": [
                                {
                                    "name": "bounds"
                                }
                            ]
                        },
                        {
                            "name": "getGoogleBounds",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 286,
                            "params": [
                                {
                                    "name": "bounds"
                                }
                            ]
                        },
                        {
                            "name": "getPoint",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 293,
                            "params": [
                                {
                                    "name": "geoJsonPoint"
                                }
                            ]
                        },
                        {
                            "name": "getMarker",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 299,
                            "params": [
                                {
                                    "name": "geoJsonPoint"
                                },
                                {
                                    "name": "text"
                                }
                            ]
                        },
                        {
                            "name": "getCircleGeometry",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 306,
                            "params": [
                                {
                                    "name": "center"
                                },
                                {
                                    "name": "radius"
                                }
                            ]
                        },
                        {
                            "name": "getBBoxes",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 311,
                            "params": [
                                {
                                    "name": "geometries"
                                }
                            ]
                        },
                        {
                            "name": "focusOnBbox",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 400,
                            "params": [
                                {
                                    "name": "bbox"
                                },
                                {
                                    "name": "doHandleLeftMenu"
                                },
                                {
                                    "name": "viewInfo"
                                }
                            ]
                        },
                        {
                            "name": "showBBox",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 441,
                            "params": [
                                {
                                    "name": "bbox"
                                },
                                {
                                    "name": "color"
                                }
                            ]
                        },
                        {
                            "name": "defaultFocus",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 459,
                            "params": [
                                {
                                    "name": "doHandleLeftMenu"
                                },
                                {
                                    "name": "viewInfo"
                                }
                            ]
                        },
                        {
                            "name": "focus",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 463,
                            "params": [
                                {
                                    "name": "center"
                                },
                                {
                                    "name": "zoomLevel"
                                }
                            ]
                        },
                        {
                            "name": "getCenter",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 472,
                            "params": []
                        },
                        {
                            "name": "getZoom",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 478,
                            "params": []
                        },
                        {
                            "name": "convertToPoint",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 521,
                            "params": [
                                {
                                    "name": "position"
                                }
                            ],
                            "comments": [
                                "convert a position into a point to be used by handler"
                            ]
                        },
                        {
                            "name": "getClusterIconSize",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 575,
                            "params": [
                                {
                                    "name": "item_count"
                                },
                                {
                                    "name": "layer"
                                }
                            ],
                            "comments": [
                                "@desc returns size of cluster",
                                "@param {Number} item_count",
                                "@param {Object} layer",
                                "@returns {Number} pixel size of icon"
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 605,
                            "params": [
                                {
                                    "name": "layers"
                                },
                                {
                                    "name": "status"
                                }
                            ],
                            "comments": [
                                "@desc Changes the setVisibility status for given Layers",
                                "@param {Object} layers",
                                "@param {Boolean} status"
                            ]
                        },
                        {
                            "name": "drawPointsOnLayer",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 621,
                            "params": [
                                {
                                    "name": "layer"
                                },
                                {
                                    "name": "rows"
                                }
                            ],
                            "comments": [
                                "@desc Draw points on layer",
                                "@param {Object} layer",
                                "@param {Array} rows Objects with doc.geometry feature"
                            ]
                        },
                        {
                            "name": "inCorridor",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 649,
                            "params": [
                                {
                                    "name": "line"
                                }
                            ],
                            "comments": [
                                "@desc Checks wether a point is in a corridor",
                                "@param {Object} line",
                                "@returns {Boolean} "
                            ]
                        },
                        {
                            "name": "inCircles",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 694,
                            "params": [
                                {
                                    "name": "line"
                                }
                            ],
                            "comments": [
                                "@desc Checks wether a point is in a a circle",
                                "@param {Object} line",
                                "@returns {Boolean} "
                            ]
                        },
                        {
                            "name": "getLineFeature",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 734,
                            "params": [
                                {
                                    "name": "line"
                                },
                                {
                                    "name": "row"
                                }
                            ],
                            "comments": [
                                "@desc Create a new Vector Feature with a row payload",
                                "@params {Object} line",
                                "@params {Object} row",
                                "@returns {OpenLayers.Feature.Vector}"
                            ]
                        },
                        {
                            "name": "raiseLayers",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 746,
                            "params": [
                                {
                                    "name": "layers"
                                }
                            ],
                            "comments": [
                                "@desc Puts layers on top of map",
                                "@params {Array} layers array of layers"
                            ]
                        },
                        {
                            "name": "checkCorridorBounds",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 759,
                            "params": [],
                            "comments": [
                                "@desc Draw the corridor"
                            ]
                        },
                        {
                            "name": "toggleMap",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 815,
                            "params": [
                                {
                                    "name": "flag"
                                }
                            ],
                            "comments": [
                                "@desc Show or hide map",
                                "@param {Boolean} true to show, false to hide map"
                            ]
                        },
                        {
                            "name": "updateRenderIntent",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 829,
                            "params": [
                                {
                                    "name": "rec"
                                },
                                {
                                    "name": "map"
                                },
                                {
                                    "name": "defaultValue"
                                }
                            ],
                            "comments": [
                                "Update style of an olFeature based on a decision map"
                            ]
                        },
                        {
                            "name": "addMarkerToLayer",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 850,
                            "params": [
                                {
                                    "name": "point"
                                },
                                {
                                    "name": "contentCode"
                                },
                                {
                                    "name": "layer"
                                }
                            ],
                            "comments": [
                                "@desc Add a marker with a content to a layer",
                                "@param {GeoJson.Point} a point",
                                "@param {string} marker content, e.g. start or end",
                                "@param {Object} layer reference to add point to"
                            ]
                        },
                        {
                            "name": "addCircleToLayer",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 866,
                            "params": [
                                {
                                    "name": "circle"
                                },
                                {
                                    "name": "layer"
                                },
                                {
                                    "name": "style"
                                }
                            ]
                        },
                        {
                            "name": "addGeometryToLayer",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 874,
                            "params": [
                                {
                                    "name": "geometry"
                                },
                                {
                                    "name": "layer"
                                },
                                {
                                    "name": "style"
                                }
                            ]
                        },
                        {
                            "name": "addBoundingBoxToLayer",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 881,
                            "params": [
                                {
                                    "name": "swPoint"
                                },
                                {
                                    "name": "nePoint"
                                },
                                {
                                    "name": "layer"
                                },
                                {
                                    "name": "style"
                                }
                            ]
                        },
                        {
                            "name": "getLayer",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 897,
                            "params": [
                                {
                                    "name": "name"
                                },
                                {
                                    "name": "type"
                                },
                                {
                                    "name": "options"
                                }
                            ],
                            "comments": [
                                "@desc Returns a layer object",
                                "@param {string} name of layer",
                                "@param {string} type, e.g. 'marker'",
                                "@param {Object} paramter object"
                            ]
                        },
                        {
                            "name": "registerEvent",
                            "type": "function",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 1030,
                            "params": [
                                {
                                    "name": "$event"
                                },
                                {
                                    "name": "$params"
                                }
                            ],
                            "comments": [
                                "@desc handles all types of OpenLayers map events",
                                "is used in index.html inside the ui-openlayers directive"
                            ]
                        },
                        {
                            "name": "MapState",
                            "type": "class",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 1084,
                            "params": [],
                            "api": {
                                "funcs": [
                                    {
                                        "name": "restore",
                                        "type": "function",
                                        "public": true,
                                        "line": 1088,
                                        "params": [
                                            {
                                                "name": "viewInfo"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "preserve",
                                        "type": "function",
                                        "public": true,
                                        "line": 1097,
                                        "params": []
                                    }
                                ],
                                "vars": []
                            },
                            "comments": [
                                "@desc Return mapStateObject which can be used to remember the state",
                                "of the current map zoom and center",
                                "@returns {Object} objects which preserves state of map"
                            ]
                        },
                        {
                            "name": "MapInterface",
                            "type": "class",
                            "parentObject": "tcMap",
                            "public": true,
                            "line": 1107,
                            "params": [],
                            "api": {
                                "funcs": [
                                    {
                                        "name": "on",
                                        "type": "function",
                                        "public": true,
                                        "line": 1109,
                                        "params": [
                                            {
                                                "name": "name"
                                            },
                                            {
                                                "name": "cb"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "trigger",
                                        "type": "function",
                                        "public": true,
                                        "line": 1110,
                                        "params": [
                                            {
                                                "name": "name"
                                            },
                                            {
                                                "name": "obj"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "onRightClick",
                                        "type": "function",
                                        "public": true,
                                        "line": 1119,
                                        "params": [
                                            {
                                                "name": "name"
                                            },
                                            {
                                                "name": "callback"
                                            }
                                        ],
                                        "comments": [
                                            "what to do on right click for a specific tab"
                                        ]
                                    },
                                    {
                                        "name": "showRoute",
                                        "type": "function",
                                        "public": true,
                                        "line": 1125,
                                        "params": [],
                                        "comments": [
                                            "show route"
                                        ]
                                    },
                                    {
                                        "name": "hideRoute",
                                        "type": "function",
                                        "public": true,
                                        "line": 1129,
                                        "params": [],
                                        "comments": [
                                            "hide route"
                                        ]
                                    },
                                    {
                                        "name": "hasRoute",
                                        "type": "function",
                                        "public": true,
                                        "line": 1132,
                                        "params": []
                                    },
                                    {
                                        "name": "addRoute",
                                        "type": "function",
                                        "public": true,
                                        "line": 1136,
                                        "params": [
                                            {
                                                "name": "point1"
                                            },
                                            {
                                                "name": "point2"
                                            }
                                        ],
                                        "comments": [
                                            "TODO: Move to singe function"
                                        ]
                                    },
                                    {
                                        "name": "destroyRoute",
                                        "type": "function",
                                        "public": true,
                                        "line": 1147,
                                        "params": []
                                    },
                                    {
                                        "name": "drawRoute",
                                        "type": "function",
                                        "public": true,
                                        "line": 1150,
                                        "params": []
                                    },
                                    {
                                        "name": "toggleRouteCorridor",
                                        "type": "function",
                                        "public": true,
                                        "line": 1156,
                                        "params": [
                                            {
                                                "name": "flag"
                                            }
                                        ],
                                        "comments": [
                                            "enable filter.flag"
                                        ]
                                    },
                                    {
                                        "name": "updateRouteCorridor",
                                        "type": "function",
                                        "public": true,
                                        "line": 1161,
                                        "params": [
                                            {
                                                "name": "radiusFrom"
                                            },
                                            {
                                                "name": "radiusTo"
                                            },
                                            {
                                                "name": "routeWidth"
                                            },
                                            {
                                                "name": "changeCB"
                                            }
                                        ],
                                        "comments": [
                                            "update corridor properties"
                                        ]
                                    }
                                ],
                                "vars": []
                            },
                            "comments": [
                                "Collection of functions used by tcBusinessLogic Map Factories"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcMapStyle",
        "children": [
            {
                "name": "tcMapStyleFactory",
                "type": "factory",
                "level": 0,
                "line": 5,
                "params": [],
                "publicName": "tcMapStyle",
                "comments": [
                    "@desc Provides styles for all layer elements",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcSearch",
        "children": [
            {
                "name": "tcSearchFactory",
                "type": "factory",
                "level": 0,
                "line": 8,
                "params": [
                    {
                        "name": "$timeout"
                    },
                    {
                        "name": "$interval"
                    },
                    {
                        "name": "tcSearchCouchbase"
                    },
                    {
                        "name": "tcSearchHelper"
                    },
                    {
                        "name": "tcSearchBuilder"
                    },
                    {
                        "name": "CallbackService"
                    }
                ],
                "publicName": "tcSearch",
                "comments": [
                    "Search Service",
                    "Core service to search the DB for Data",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "updateSearchObject",
                            "type": "function",
                            "level": -1,
                            "line": 544,
                            "params": [
                                {
                                    "name": "fieldName"
                                }
                            ]
                        },
                        {
                            "name": "decideIfQueryMore",
                            "type": "function",
                            "level": -1,
                            "line": 624,
                            "params": [],
                            "comments": [
                                "Decide if after performing a search, the results are too few and",
                                "doQueryMore should be triggered automatically"
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "setProxy",
                            "type": "function",
                            "parentObject": "tcSearch",
                            "public": true,
                            "line": 30,
                            "params": [
                                {
                                    "name": "proxyUrl"
                                },
                                {
                                    "name": "version"
                                }
                            ],
                            "comments": [
                                "@desc Set proxy url and version"
                            ]
                        },
                        {
                            "name": "getSearcher",
                            "type": "function",
                            "parentObject": "tcSearch",
                            "public": true,
                            "line": 45,
                            "params": [
                                {
                                    "name": "documentType"
                                },
                                {
                                    "name": "optionsRef"
                                },
                                {
                                    "name": "queryOptions"
                                }
                            ],
                            "comments": [
                                "@desc returns an Object containing all functions required to",
                                "query the DB"
                            ]
                        },
                        {
                            "name": "reset",
                            "type": "function",
                            "parentObject": "_auto",
                            "public": true,
                            "line": 110,
                            "params": []
                        },
                        {
                            "name": "doAutoUpdate",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 123,
                            "params": [],
                            "comments": [
                                "AUTO UPDATE"
                            ]
                        },
                        {
                            "name": "_resetAutoUpdate",
                            "type": "class",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 326,
                            "params": [
                                {
                                    "name": "dateLastSearch"
                                }
                            ],
                            "api": {
                                "funcs": [],
                                "vars": []
                            },
                            "comments": [
                                "if a new search has been done, all auto update properties need to rest"
                            ]
                        },
                        {
                            "name": "doApplyUpdate",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 334,
                            "params": []
                        },
                        {
                            "name": "doUpdateDate",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 361,
                            "params": [
                                {
                                    "name": "date"
                                }
                            ],
                            "comments": [
                                "crazy, I know. We have our own time in aurora"
                            ]
                        },
                        {
                            "name": "registerFilter",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 368,
                            "params": [
                                {
                                    "name": "func"
                                }
                            ],
                            "comments": [
                                "and return true or false"
                            ]
                        },
                        {
                            "name": "_filterRow",
                            "type": "class",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 373,
                            "params": [
                                {
                                    "name": "obj"
                                }
                            ],
                            "api": {
                                "funcs": [],
                                "vars": []
                            },
                            "comments": [
                                "check all filter functions if obj is valid, return true if it is not"
                            ]
                        },
                        {
                            "name": "_filter",
                            "type": "class",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 390,
                            "params": [],
                            "api": {
                                "funcs": [],
                                "vars": []
                            },
                            "comments": [
                                "returns amount for removed rows"
                            ]
                        },
                        {
                            "name": "_fakePositions",
                            "type": "class",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 417,
                            "params": [],
                            "api": {
                                "funcs": [],
                                "vars": []
                            },
                            "comments": [
                                "fake position data to match current search"
                            ]
                        },
                        {
                            "name": "_change",
                            "type": "class",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 457,
                            "params": [],
                            "api": {
                                "funcs": [],
                                "vars": []
                            }
                        },
                        {
                            "name": "cancel",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 465,
                            "params": [],
                            "comments": [
                                "cancel"
                            ]
                        },
                        {
                            "name": "doReset",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 471,
                            "params": [
                                {
                                    "name": "optionalOptionsRef"
                                }
                            ],
                            "comments": [
                                "doReset"
                            ]
                        },
                        {
                            "name": "getRowByFeature",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 533,
                            "params": [
                                {
                                    "name": "featureId"
                                },
                                {
                                    "name": "featurePath"
                                },
                                {
                                    "name": "maxLines"
                                }
                            ],
                            "comments": [
                                "@desc Find row by unique ID",
                                "@param {string} value to compare to",
                                "@param {Array} path in object which to compare",
                                "@param {Number} max lines to be searched"
                            ]
                        },
                        {
                            "name": "markDeletedRows",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 563,
                            "params": [],
                            "comments": [
                                "mark rows as deleted"
                            ]
                        },
                        {
                            "name": "doDeleteRows",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 592,
                            "params": [],
                            "comments": [
                                "delete all rows which are marked is \"deleted\""
                            ]
                        },
                        {
                            "name": "doLoadSearch",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 638,
                            "params": [
                                {
                                    "name": "optionsRef"
                                }
                            ],
                            "comments": [
                                "theoreticall a search can be saved and loaded once needed"
                            ]
                        },
                        {
                            "name": "doQueryCount",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 648,
                            "params": [
                                {
                                    "name": "cb"
                                }
                            ],
                            "comments": [
                                "Query intendet to count only the results"
                            ]
                        },
                        {
                            "name": "doQuery",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 662,
                            "params": []
                        },
                        {
                            "name": "_doQuery",
                            "type": "class",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 697,
                            "params": [
                                {
                                    "name": "cb"
                                }
                            ],
                            "api": {
                                "funcs": [],
                                "vars": []
                            }
                        },
                        {
                            "name": "doQueryMore",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 787,
                            "params": [
                                {
                                    "name": "calledBy"
                                }
                            ],
                            "comments": [
                                "Query more data from DB"
                            ]
                        },
                        {
                            "name": "doQueryDoc",
                            "type": "function",
                            "parentObject": "_collection",
                            "public": true,
                            "line": 847,
                            "params": [
                                {
                                    "name": "id"
                                }
                            ],
                            "comments": [
                                "Get single document (via tcSearchCouchbase)",
                                "Docu: https://github.com/eddelplus/timocouch/wiki/1.2-CouchDB",
                                "returns query list record: {id:<>,doc:<>}",
                                "to make it compatible with the view."
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcSearchBuilder",
        "children": [
            {
                "name": "tcSearchBuilderFactory",
                "type": "factory",
                "level": 0,
                "line": 7,
                "params": [
                    {
                        "name": "tcSearchLucene"
                    }
                ],
                "publicName": "tcSearchBuilder",
                "comments": [
                    "@desc Converts search object into Lucene Search"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "processQueryString",
                            "type": "function",
                            "parentObject": "tcSearchBuilder",
                            "public": true,
                            "line": 44,
                            "params": [
                                {
                                    "name": "queryString"
                                }
                            ],
                            "comments": [
                                "@desc updates an existing query string - currently only ",
                                "the lucene infinity values are fixed"
                            ]
                        },
                        {
                            "name": "processQueryObject",
                            "type": "function",
                            "parentObject": "tcSearchBuilder",
                            "public": true,
                            "line": 51,
                            "params": [
                                {
                                    "name": "tcSearch"
                                },
                                {
                                    "name": "_optionsRef"
                                },
                                {
                                    "name": "_documentType"
                                }
                            ],
                            "comments": [
                                "@desc builds a query based on a search object"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcSearchCouchbase",
        "children": [
            {
                "name": "tcSearchCouchbaseFactory",
                "type": "factory",
                "level": 0,
                "line": 8,
                "params": [
                    {
                        "name": "$http"
                    }
                ],
                "publicName": "tcSearchCouchbase",
                "internal": {
                    "funcs": [
                        {
                            "name": "extendJSONP",
                            "type": "function",
                            "level": -1,
                            "line": 13,
                            "params": [
                                {
                                    "name": "config"
                                }
                            ]
                        },
                        {
                            "name": "encodeUri",
                            "type": "function",
                            "level": -1,
                            "line": 27,
                            "params": [
                                {
                                    "name": "base"
                                },
                                {
                                    "name": "part1"
                                },
                                {
                                    "name": "part2"
                                }
                            ]
                        },
                        {
                            "name": "CouchDB",
                            "type": "class",
                            "level": -1,
                            "line": 40,
                            "params": [
                                {
                                    "name": "dbName"
                                },
                                {
                                    "name": "serverUri"
                                },
                                {
                                    "name": "getMethod"
                                }
                            ],
                            "api": {
                                "funcs": [],
                                "vars": []
                            },
                            "comments": [
                                "Database name is required parameter"
                            ]
                        },
                        {
                            "name": "CouchDoc",
                            "type": "class",
                            "level": -1,
                            "line": 47,
                            "params": [
                                {
                                    "name": "init"
                                }
                            ],
                            "api": {
                                "funcs": [
                                    {
                                        "name": "load",
                                        "type": "function",
                                        "public": true,
                                        "line": 51,
                                        "params": [
                                            {
                                                "name": "id"
                                            },
                                            {
                                                "name": "docParams"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "save",
                                        "type": "function",
                                        "public": true,
                                        "line": 69,
                                        "params": []
                                    },
                                    {
                                        "name": "remove",
                                        "type": "function",
                                        "public": true,
                                        "line": 97,
                                        "params": []
                                    },
                                    {
                                        "name": "attach",
                                        "type": "function",
                                        "public": true,
                                        "line": 110,
                                        "params": [
                                            {
                                                "name": "file"
                                            },
                                            {
                                                "name": "name"
                                            }
                                        ],
                                        "comments": [
                                            "Requires File-API 'file', sorry IE9"
                                        ]
                                    },
                                    {
                                        "name": "detach",
                                        "type": "function",
                                        "public": true,
                                        "line": 132,
                                        "params": [
                                            {
                                                "name": "name"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "attachUri",
                                        "type": "function",
                                        "public": true,
                                        "line": 150,
                                        "params": [
                                            {
                                                "name": "attachName"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "getInfo",
                                        "type": "function",
                                        "public": true,
                                        "line": 168,
                                        "params": []
                                    },
                                    {
                                        "name": "newDoc",
                                        "type": "function",
                                        "public": true,
                                        "line": 181,
                                        "params": [
                                            {
                                                "name": "initData"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "getDoc",
                                        "type": "function",
                                        "public": true,
                                        "line": 187,
                                        "params": [
                                            {
                                                "name": "id"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "getQueryDoc",
                                        "type": "function",
                                        "public": true,
                                        "line": 195,
                                        "params": [
                                            {
                                                "name": "idx"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "queryView",
                                        "type": "function",
                                        "public": true,
                                        "line": 280,
                                        "params": [
                                            {
                                                "name": "viewURL"
                                            },
                                            {
                                                "name": "qparams"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "query",
                                        "type": "function",
                                        "public": true,
                                        "line": 313,
                                        "params": [
                                            {
                                                "name": "design"
                                            },
                                            {
                                                "name": "view"
                                            },
                                            {
                                                "name": "qparams"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "list",
                                        "type": "function",
                                        "public": true,
                                        "line": 321,
                                        "params": [
                                            {
                                                "name": "design"
                                            },
                                            {
                                                "name": "list"
                                            },
                                            {
                                                "name": "view"
                                            },
                                            {
                                                "name": "qparams"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "search",
                                        "type": "function",
                                        "public": true,
                                        "line": 330,
                                        "params": [
                                            {
                                                "name": "design"
                                            },
                                            {
                                                "name": "view"
                                            },
                                            {
                                                "name": "qparams"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "searchNext",
                                        "type": "function",
                                        "public": true,
                                        "line": 338,
                                        "params": []
                                    },
                                    {
                                        "name": "geo",
                                        "type": "function",
                                        "public": true,
                                        "line": 371,
                                        "params": [
                                            {
                                                "name": "design"
                                            },
                                            {
                                                "name": "view"
                                            },
                                            {
                                                "name": "qparams"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "queryAll",
                                        "type": "function",
                                        "public": true,
                                        "line": 379,
                                        "params": [
                                            {
                                                "name": "qparams"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "queryRefresh",
                                        "type": "function",
                                        "public": true,
                                        "line": 383,
                                        "params": []
                                    },
                                    {
                                        "name": "queryNext",
                                        "type": "function",
                                        "public": true,
                                        "line": 387,
                                        "params": []
                                    },
                                    {
                                        "name": "queryPrev",
                                        "type": "function",
                                        "public": true,
                                        "line": 401,
                                        "params": []
                                    }
                                ],
                                "vars": []
                            },
                            "comments": [
                                "Template object can be passed in and gets copied over"
                            ]
                        },
                        {
                            "name": "executeQuery",
                            "type": "function",
                            "level": -1,
                            "line": 241,
                            "params": [
                                {
                                    "name": "db"
                                },
                                {
                                    "name": "doAttach"
                                }
                            ]
                        },
                        {
                            "name": "CouchServer",
                            "type": "class",
                            "level": -1,
                            "line": 414,
                            "params": [
                                {
                                    "name": "url"
                                },
                                {
                                    "name": "getMethod"
                                }
                            ],
                            "api": {
                                "funcs": [
                                    {
                                        "name": "getDB",
                                        "type": "function",
                                        "public": true,
                                        "line": 424,
                                        "params": [
                                            {
                                                "name": "dbName"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "getUserDB",
                                        "type": "function",
                                        "public": true,
                                        "line": 428,
                                        "params": []
                                    },
                                    {
                                        "name": "getUserDoc",
                                        "type": "function",
                                        "public": true,
                                        "line": 435,
                                        "params": []
                                    },
                                    {
                                        "name": "getInfo",
                                        "type": "function",
                                        "public": true,
                                        "line": 445,
                                        "params": []
                                    },
                                    {
                                        "name": "getDatabases",
                                        "type": "function",
                                        "public": true,
                                        "line": 458,
                                        "params": []
                                    },
                                    {
                                        "name": "createDB",
                                        "type": "function",
                                        "public": true,
                                        "line": 471,
                                        "params": [
                                            {
                                                "name": "dbName"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "session",
                                        "type": "function",
                                        "public": true,
                                        "line": 485,
                                        "params": []
                                    },
                                    {
                                        "name": "login",
                                        "type": "function",
                                        "public": true,
                                        "line": 498,
                                        "params": [
                                            {
                                                "name": "usr"
                                            },
                                            {
                                                "name": "pwd"
                                            }
                                        ]
                                    },
                                    {
                                        "name": "logout",
                                        "type": "function",
                                        "public": true,
                                        "line": 525,
                                        "params": []
                                    },
                                    {
                                        "name": "getUUIDs",
                                        "type": "function",
                                        "public": true,
                                        "line": 542,
                                        "params": [
                                            {
                                                "name": "cnt"
                                            }
                                        ]
                                    }
                                ],
                                "vars": []
                            }
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcSearchHelper",
        "children": [
            {
                "name": "tcSearchHelperFactory",
                "type": "factory",
                "level": 0,
                "line": 4,
                "params": [],
                "publicName": "tcSearchHelper",
                "comments": [
                    "@desc Helpers for tcSearch"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "isEmpty",
                            "type": "function",
                            "level": -1,
                            "line": 11,
                            "params": [
                                {
                                    "name": "obj"
                                }
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "removeEmptyObjects",
                            "type": "function",
                            "parentObject": "tcSearchHelper",
                            "public": true,
                            "line": 29,
                            "params": [
                                {
                                    "name": "obj"
                                }
                            ]
                        },
                        {
                            "name": "notIn",
                            "type": "function",
                            "parentObject": "tcSearchHelper",
                            "public": true,
                            "line": 40,
                            "params": [
                                {
                                    "name": "obj"
                                },
                                {
                                    "name": "objArray"
                                },
                                {
                                    "name": "property"
                                }
                            ],
                            "comments": [
                                "returns true if obj is not in objArray identified by property "
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcSearchLucene",
        "children": [
            {
                "name": "tcSearchLuceneFactory",
                "type": "factory",
                "level": 0,
                "line": 7,
                "params": [],
                "publicName": "tcSearchLucene",
                "comments": [
                    "Provides functions to convert a search object into LUCN Syntax",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "fixInfinity",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 16,
                            "params": [
                                {
                                    "name": "searchQuery"
                                }
                            ],
                            "comments": [
                                "SOLR can not handle Infinity with long values"
                            ]
                        },
                        {
                            "name": "searchString",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 26,
                            "params": [
                                {
                                    "name": "field"
                                },
                                {
                                    "name": "value"
                                },
                                {
                                    "name": "doFuzzy"
                                }
                            ],
                            "comments": [
                                "String"
                            ]
                        },
                        {
                            "name": "searchMultiSelect",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 55,
                            "params": [
                                {
                                    "name": "field"
                                },
                                {
                                    "name": "value"
                                },
                                {
                                    "name": "operator"
                                }
                            ],
                            "comments": [
                                "@field  Name of field",
                                "@value Array of multiselect values",
                                "@operator Either OR or AND"
                            ]
                        },
                        {
                            "name": "searchBoolean",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 85,
                            "params": [
                                {
                                    "name": "field"
                                },
                                {
                                    "name": "value"
                                }
                            ],
                            "comments": [
                                "Boolean True exclusive"
                            ]
                        },
                        {
                            "name": "searchNumber",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 98,
                            "params": [
                                {
                                    "name": "field"
                                },
                                {
                                    "name": "value"
                                }
                            ],
                            "comments": [
                                "Number"
                            ]
                        },
                        {
                            "name": "searchNumberRange",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 109,
                            "params": [
                                {
                                    "name": "field"
                                },
                                {
                                    "name": "value"
                                }
                            ],
                            "comments": [
                                "Number Range"
                            ]
                        },
                        {
                            "name": "searchGeoBoundingBox",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 137,
                            "params": [
                                {
                                    "name": "latField"
                                },
                                {
                                    "name": "lngField"
                                },
                                {
                                    "name": "value"
                                }
                            ],
                            "comments": [
                                "@latField Name of field in Lucene storing lat values",
                                "@lngField - lng values",
                                "@value    Array of objects of format",
                                "{topLeft:{lat:,lng:},bottomRight:{lat:,lng:}}"
                            ]
                        },
                        {
                            "name": "searchRouteBox",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 188,
                            "params": [
                                {
                                    "name": "latFromField"
                                },
                                {
                                    "name": "lngFromField"
                                },
                                {
                                    "name": "latToField"
                                },
                                {
                                    "name": "lngToField"
                                },
                                {
                                    "name": "value"
                                }
                            ]
                        },
                        {
                            "name": "searchTimeRange",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 248,
                            "params": [
                                {
                                    "name": "field"
                                },
                                {
                                    "name": "timeFrom"
                                },
                                {
                                    "name": "timeTo"
                                }
                            ],
                            "comments": [
                                "time range"
                            ]
                        },
                        {
                            "name": "searchDays",
                            "type": "function",
                            "parentObject": "tcSearchLucene",
                            "public": true,
                            "line": 281,
                            "params": [
                                {
                                    "name": "field"
                                },
                                {
                                    "name": "value"
                                }
                            ],
                            "comments": [
                                "@field name of field",
                                "@value array of dates"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcTruck",
        "children": [
            {
                "name": "tcTruckFactory",
                "type": "factory",
                "level": 0,
                "line": 4,
                "params": [
                    {
                        "name": "watchService"
                    },
                    {
                        "name": "CallbackService"
                    },
                    {
                        "name": "tcTruckMap"
                    },
                    {
                        "name": "geoServiceHere"
                    }
                ],
                "publicName": "tcTruck",
                "comments": [
                    "tcTruck Service"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "getCtrlStartRadius",
                            "type": "function",
                            "level": -1,
                            "line": 103,
                            "params": [],
                            "comments": [
                                "Watch start point radius"
                            ]
                        },
                        {
                            "name": "onCtrlStartRadiusChange",
                            "type": "function",
                            "level": -1,
                            "line": 107,
                            "params": [
                                {
                                    "name": "newval"
                                },
                                {
                                    "name": "oldval"
                                }
                            ]
                        },
                        {
                            "name": "resetSearch",
                            "type": "function",
                            "level": -1,
                            "line": 131,
                            "params": [],
                            "comments": []
                        },
                        {
                            "name": "addStartPoint",
                            "type": "function",
                            "level": -1,
                            "line": 156,
                            "params": [
                                {
                                    "name": "Point"
                                }
                            ]
                        },
                        {
                            "name": "addEndPoint",
                            "type": "function",
                            "level": -1,
                            "line": 192,
                            "params": [
                                {
                                    "name": "Point"
                                }
                            ]
                        },
                        {
                            "name": "drawCountry",
                            "type": "function",
                            "level": -1,
                            "line": 229,
                            "params": [],
                            "comments": [
                                "@desc fetch geometry for address.country and draw it on map"
                            ]
                        },
                        {
                            "name": "redraw",
                            "type": "function",
                            "level": -1,
                            "line": 240,
                            "params": []
                        },
                        {
                            "name": "triggerSearch",
                            "type": "function",
                            "level": -1,
                            "line": 254,
                            "params": []
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "level": -1,
                            "line": 288,
                            "params": [
                                {
                                    "name": "status"
                                }
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "isValidQuery",
                            "type": "function",
                            "parentObject": "tcTruck",
                            "public": true,
                            "line": 395,
                            "params": [
                                {
                                    "name": "newval"
                                },
                                {
                                    "name": "oldval"
                                }
                            ],
                            "comments": [
                                "Validates searchFields if a query can be executed",
                                "- used by app.js"
                            ]
                        },
                        {
                            "name": "getSearch",
                            "type": "function",
                            "parentObject": "tcTruck",
                            "public": true,
                            "line": 422,
                            "params": [],
                            "comments": [
                                "@desc returns a search object to be saved in e.g. favorites",
                                "@returns {Object} representing a search"
                            ]
                        },
                        {
                            "name": "loadSearch",
                            "type": "function",
                            "parentObject": "tcTruck",
                            "public": true,
                            "line": 464,
                            "params": [
                                {
                                    "name": "searchObject"
                                }
                            ],
                            "comments": [
                                "@desc loads an external search into searchFields",
                                "@params {Object} searchObject contains data created by getSearch"
                            ]
                        },
                        {
                            "name": "getSearchName",
                            "type": "function",
                            "parentObject": "tcTruck",
                            "public": true,
                            "line": 510,
                            "params": [],
                            "comments": [
                                "@desc returns a string representing the current search",
                                "@returns {string}"
                            ]
                        },
                        {
                            "name": "leaveView",
                            "type": "function",
                            "parentObject": "tcTruck",
                            "public": true,
                            "line": 516,
                            "params": [],
                            "comments": [
                                "used by tabHandler"
                            ]
                        },
                        {
                            "name": "enterView",
                            "type": "function",
                            "parentObject": "tcTruck",
                            "public": true,
                            "line": 522,
                            "params": [
                                {
                                    "name": "viewInfo"
                                }
                            ],
                            "comments": [
                                "used by tabHandler"
                            ]
                        },
                        {
                            "name": "focus",
                            "type": "function",
                            "parentObject": "tcTruck",
                            "public": true,
                            "line": 528,
                            "params": [
                                {
                                    "name": "viewInfo"
                                }
                            ],
                            "comments": [
                                "used by tabHandler"
                            ]
                        },
                        {
                            "name": "drawMap",
                            "type": "function",
                            "parentObject": "tcTruck",
                            "public": true,
                            "line": 535,
                            "params": [
                                {
                                    "name": "truckRows"
                                }
                            ],
                            "comments": [
                                "@desc redraws map based on rows"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcTruckMap",
        "children": [
            {
                "name": "tcTruckMapFactory",
                "type": "factory",
                "level": 0,
                "line": 2,
                "params": [
                    {
                        "name": "tcMap"
                    }
                ],
                "publicName": "tcTruckMap",
                "internal": {
                    "funcs": [
                        {
                            "name": "draw",
                            "type": "function",
                            "level": -1,
                            "line": 63,
                            "params": [
                                {
                                    "name": "truckRows"
                                }
                            ],
                            "comments": [
                                "@desc Draws the found Truck on the map after removing",
                                "all old features.",
                                "@param {Array} truckRows"
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "draw",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 84,
                            "params": [
                                {
                                    "name": "truckRows"
                                }
                            ],
                            "comments": [
                                "@desc draws truck rows on map",
                                "- used by tcTruck"
                            ]
                        },
                        {
                            "name": "focus",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 96,
                            "params": [
                                {
                                    "name": "viewInfo"
                                },
                                {
                                    "name": "featureType"
                                }
                            ],
                            "comments": [
                                "@desc Calculates the Bounding Box depending on the required layer.",
                                "if the layer is empty, calls the default focus from tcMap.",
                                "- used by tcTruck",
                                "@param viewInfo {Object} contains info from $rootScope about GUI ctrls",
                                "@param featureType {String}"
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 130,
                            "params": [],
                            "comments": [
                                "@desc Clears all the Layers",
                                "- used by tcTruck"
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 150,
                            "params": [
                                {
                                    "name": "status"
                                }
                            ],
                            "comments": [
                                "@desc Changes the setVisibility status for all Layers",
                                "- used by tcTruck",
                                "@param {Boolean} setVisibility status"
                            ]
                        },
                        {
                            "name": "addMarker",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 163,
                            "params": [
                                {
                                    "name": "Point"
                                },
                                {
                                    "name": "contentCode"
                                }
                            ],
                            "comments": [
                                "@desc Draws a marker on the marker layer",
                                "@param {GeoJson.Point} a Point",
                                "@param {String} marker content",
                                "- used by tcTruck"
                            ]
                        },
                        {
                            "name": "getGeometry",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 173,
                            "params": [
                                {
                                    "name": "shapeData"
                                }
                            ],
                            "comments": [
                                "@desc Draws a marker on the marker layer",
                                "@param {GeoJson.Point} a Point",
                                "@param {string} marker content"
                            ]
                        },
                        {
                            "name": "drawStartPoint",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 179,
                            "params": [
                                {
                                    "name": "point"
                                },
                                {
                                    "name": "radius"
                                }
                            ]
                        },
                        {
                            "name": "drawEndPoint",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 189,
                            "params": [
                                {
                                    "name": "point"
                                }
                            ]
                        },
                        {
                            "name": "setEndShape",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 196,
                            "params": [
                                {
                                    "name": "shapeData"
                                }
                            ]
                        },
                        {
                            "name": "getStartPointBoundingBox",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 200,
                            "params": []
                        },
                        {
                            "name": "pointInStartCircle",
                            "type": "function",
                            "parentObject": "tcTruckMap",
                            "public": true,
                            "line": 204,
                            "params": [
                                {
                                    "name": "geoJson"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcWarehouse",
        "children": [
            {
                "name": "tcWarehouseFactory",
                "type": "factory",
                "level": 0,
                "line": 5,
                "params": [
                    {
                        "name": "watchService"
                    },
                    {
                        "name": "CallbackService"
                    },
                    {
                        "name": "angularDefer"
                    },
                    {
                        "name": "tcWarehouseMap"
                    }
                ],
                "publicName": "tcWarehouse",
                "comments": [
                    "@desc tcWarehouse Service",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [
                        {
                            "name": "resetSearch",
                            "type": "function",
                            "level": -1,
                            "line": 65,
                            "params": [],
                            "comments": []
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "level": -1,
                            "line": 72,
                            "params": [
                                {
                                    "name": "status"
                                }
                            ]
                        },
                        {
                            "name": "updateBoundingSearch",
                            "type": "function",
                            "level": -1,
                            "line": 84,
                            "params": [
                                {
                                    "name": "active"
                                },
                                {
                                    "name": "boxes"
                                }
                            ],
                            "comments": []
                        },
                        {
                            "name": "getWarehouseCtrlUseMapSearch",
                            "type": "function",
                            "level": -1,
                            "line": 112,
                            "params": []
                        },
                        {
                            "name": "onWarehouseCtrlUseMapSearchChange",
                            "type": "function",
                            "level": -1,
                            "line": 116,
                            "params": [
                                {
                                    "name": "newval"
                                }
                            ]
                        },
                        {
                            "name": "runWarehouseDeferedBoundingSearch",
                            "type": "function",
                            "level": -1,
                            "line": 129,
                            "params": []
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "isValidQuery",
                            "type": "function",
                            "parentObject": "tcWarehouse",
                            "public": true,
                            "line": 212,
                            "params": [
                                {
                                    "name": "newval"
                                },
                                {
                                    "name": "oldval"
                                }
                            ],
                            "comments": [
                                "Validates searchFields if a query can be executed",
                                "- used by app.js"
                            ]
                        },
                        {
                            "name": "enterView",
                            "type": "function",
                            "parentObject": "tcWarehouse",
                            "public": true,
                            "line": 224,
                            "params": [
                                {
                                    "name": "viewInfo"
                                }
                            ]
                        },
                        {
                            "name": "leaveView",
                            "type": "function",
                            "parentObject": "tcWarehouse",
                            "public": true,
                            "line": 233,
                            "params": []
                        },
                        {
                            "name": "focus",
                            "type": "function",
                            "parentObject": "tcWarehouse",
                            "public": true,
                            "line": 241,
                            "params": []
                        },
                        {
                            "name": "toggleVisibility",
                            "type": "function",
                            "parentObject": "ctrl",
                            "public": true,
                            "line": 248,
                            "params": [],
                            "comments": [
                                "@desc toggle visiblity - used by GUI buttons"
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "parentObject": "tcWarehouse",
                            "public": true,
                            "line": 257,
                            "params": [
                                {
                                    "name": "status"
                                }
                            ],
                            "comments": [
                                "@desc used by demo.js the hide on load"
                            ]
                        },
                        {
                            "name": "setBoundingSearch",
                            "type": "function",
                            "parentObject": "tcWarehouse",
                            "public": true,
                            "line": 267,
                            "params": [
                                {
                                    "name": "boxes"
                                }
                            ],
                            "comments": [
                                "@desc Enables bound search for tcWarehouse",
                                "TODO: not sure if currect here"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "tcWarehouseMap",
        "children": [
            {
                "name": "tcWarehouseMapFactory",
                "type": "factory",
                "level": 0,
                "line": 2,
                "params": [
                    {
                        "name": "tcMap"
                    }
                ],
                "publicName": "tcWarehouseMap",
                "internal": {
                    "funcs": [
                        {
                            "name": "draw",
                            "type": "function",
                            "level": -1,
                            "line": 51,
                            "params": [
                                {
                                    "name": "warehouseRows"
                                }
                            ],
                            "comments": [
                                "@desc Draws the found warehouse on the map after removing",
                                "all old features.",
                                "@param {Array} warehouseRows"
                            ]
                        }
                    ],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "draw",
                            "type": "function",
                            "parentObject": "tcWarehouseMap",
                            "public": true,
                            "line": 71,
                            "params": [
                                {
                                    "name": "warehouseRows"
                                }
                            ],
                            "comments": [
                                "@desc draws warehouse rows on map"
                            ]
                        },
                        {
                            "name": "clear",
                            "type": "function",
                            "parentObject": "tcWarehouseMap",
                            "public": true,
                            "line": 80,
                            "params": [],
                            "comments": [
                                "@desc Clears all the Layers"
                            ]
                        },
                        {
                            "name": "setVisibility",
                            "type": "function",
                            "parentObject": "tcWarehouseMap",
                            "public": true,
                            "line": 91,
                            "params": [
                                {
                                    "name": "status"
                                }
                            ],
                            "comments": [
                                "@desc Changes the setVisibility status for all Layers",
                                "@param {Boolean} setVisibility status"
                            ]
                        },
                        {
                            "name": "raiseLayers",
                            "type": "function",
                            "parentObject": "tcWarehouseMap",
                            "public": true,
                            "line": 100,
                            "params": [],
                            "comments": [
                                "@desc move Map Layers to Top"
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "timeKeeper",
        "children": [
            {
                "name": "timeKeeperFactory",
                "type": "factory",
                "level": 0,
                "line": 8,
                "params": [
                    {
                        "name": "$interval"
                    }
                ],
                "publicName": "timeKeeper",
                "comments": [
                    "@desc Provide an internal time used throughout the app",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "onTick",
                            "type": "function",
                            "parentObject": "timeKeeper",
                            "public": true,
                            "line": 20,
                            "params": [
                                {
                                    "name": "callbackFunc"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    },
    {
        "name": "uiHelper",
        "children": [
            {
                "name": "uiHelperFactory",
                "type": "factory",
                "level": 0,
                "line": 7,
                "params": [],
                "publicName": "uiHelper",
                "comments": [
                    "@desc ",
                    "@ngInject"
                ],
                "internal": {
                    "funcs": [],
                    "vars": []
                },
                "api": {
                    "funcs": [
                        {
                            "name": "toggleBetween",
                            "type": "function",
                            "parentObject": "uiHelper",
                            "public": true,
                            "line": 14,
                            "params": [
                                {
                                    "name": "currentValue"
                                },
                                {
                                    "name": "opt1"
                                },
                                {
                                    "name": "opt2"
                                }
                            ]
                        }
                    ],
                    "vars": []
                }
            }
        ]
    }
]
